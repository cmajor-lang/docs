//==============================================================================
//
//  This file contains a Javascript/Webassembly/WebAudio export of the Cmajor
//  patch 'Tremolo.cmajorpatch'.
//
//  This file was auto-generated by the Cmajor toolkit v1.0.2579
//
//  To use it, import this module into your HTML/Javascript code and call
//  `createAudioWorkletNodePatchConnection()`. The AudioWorkletPatchConnection
//  object that is returned is a PatchConnection with some extra functionality
//  to let you connect it to web audio/MIDI.
//
//  For more details about Cmajor, visit https://cmajor.dev
//
//==============================================================================

import * as helpers from "./cmaj_api/cmaj-audio-worklet-helper.js"


//==============================================================================
/** This exports the patch's manifest, in case a caller needs to find out about its properties.
 */
export const manifest =
{
  "CmajorVersion": 1,
  "ID": "dev.cmajor.examples.tremolo",
  "version": "1.0",
  "name": "Tremolo",
  "description": "A simple tremolo effect, with a custom GUI",
  "category": "effect",
  "manufacturer": "Cmajor Software Ltd",
  "isInstrument": false,
  "plugin": {
    "manufacturerCode": "Cmaj",
    "pluginCode": "adc8"
  },
  "source": "Tremolo.cmajor",
  "view": {
    "src": "ui/index.js",
    "width": 250,
    "height": 423,
    "resizable": false
  }
};

/** Returns the patch's output endpoint list */
export function getOutputEndpoints() { return Tremolo.prototype.getOutputEndpoints(); }

/** Returns the patch's input endpoint list */
export function getInputEndpoints()  { return Tremolo.prototype.getInputEndpoints(); }

//==============================================================================
/**  Creates an audio worklet node for the patch with the given name, attaches it
 *   to the audio context provided, and returns an object containing the node
 *   and a PatchConnection class to control it.
 *
 *   @param {AudioContext} audioContext - a web audio AudioContext object
 *   @param {string} workletName - the name to give the new worklet that is created
 *   @returns {AudioWorkletPatchConnection} an AudioWorkletPatchConnection which has been initialised
 */
export async function createAudioWorkletNodePatchConnection (audioContext, workletName)
{
  const connection = new helpers.AudioWorkletPatchConnection (manifest);

  await connection.initialise ({ CmajorClass: Tremolo,
                                 audioContext,
                                 workletName,
                                 hostDescription: "WebAudio" });
  return connection;
}

/***********************************************************************************
 *
 *   A Javascript/Webassembly implementation of the Cmajor processor 'Tremolo'.
 *
 *   This class was auto-generated by the Cmajor toolkit.
 *
 *   To use it, construct an instance of this class, and call `initialise()` to
 *   asynchronously prepare it for use. Once initialised, the class provides
 *   appropriate setter/getter methods for reading/writing data to its endpoints,
 *   and an `advance()` method to render the next block.
 *
 *   This roughly mirrors functionality of the cmajor Performer API - see the
 *   C++ API classes and Cmajor docs for more information about how this is used.
 */
class Tremolo
{
  /** After constructing one of these objects, call its
   *  initialise() method to prepare it for use.
   */
  constructor()
  {
  }

  //==============================================================================
  /** Prepares this processor for use.
   *
   *  @param {number} sessionID - A unique integer ID which will be used for `processor.session`.
   *  @param {number} frequency - The frequency in Hz that the processor will be expected to run at.
   */
  async initialise (sessionID, frequency)
  {
    if (! ((sessionID ^ 0) > 1))
      throw new Error ("initialise() requires a valid non-zero session ID argument");

    if (! (frequency > 1))
      throw new Error ("initialise() requires a valid frequency argument");

    const isSIMDAvailable = WebAssembly.validate (new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));

    if (isSIMDAvailable)
      await this._initialiseInternalSIMD (sessionID, frequency);
    else
      await this._initialiseInternalNonSIMD (sessionID, frequency);

    return true;
  }

  //==============================================================================
  /** Advances the processor by a number of frames.
   *
   *  Before calling `advance()` you should use the appropriate functions to
   *  push data and events into the processor's input endpoints. After calling
   *  `advance()` you can use its output endpoint access functions to read the
   *  results.
   *
   *  @param {number} numFrames - An integer number of frames to advance.
   *                              This must be greater than zero.
   */
  advance (numFrames)
  {
    this._advanceInternal (numFrames);
  }

  //==============================================================================
  /** Returns an object which encapsulates the state of the patch at this point.
   *  The state can be restored by passing this object to `restoreState()`.
   */
  getState()
  {
    return { memory: this.byteMemory.slice(0) };
  }

  /** Restores the patch to a state that was previously saved by a call to `getState()`
   */
  restoreState (savedState)
  {
    if (savedState?.memory && savedState.memory?.length === this.byteMemory.length)
      this.byteMemory.set (savedState.memory);
    else
      throw Error ("restoreState(): not a valid state object");
  }

  /** Returns a list of the output endpoints that this processor exposes.
   *  @returns {Array}
   */
  getOutputEndpoints()
  {
    return [
      {
        "endpointID": "out",
        "endpointType": "stream",
        "dataType": {
          "type": "float32"
        },
        "purpose": "audio out",
        "numAudioChannels": 1
      }
    ];
  }

  /** Returns a list of the input endpoints that this processor exposes.
   *  @returns {Array}
   */
  getInputEndpoints()
  {
    return [
      {
        "endpointID": "shape",
        "endpointType": "value",
        "dataType": {
          "type": "float32"
        },
        "annotation": {
          "name": "Shape",
          "min": 0,
          "max": 100,
          "init": 0,
          "rampFrames": 1000
        },
        "purpose": "parameter"
      },
      {
        "endpointID": "rate",
        "endpointType": "event",
        "dataType": {
          "type": "float32"
        },
        "annotation": {
          "name": "Rate",
          "min": 0.1,
          "max": 20,
          "init": 8,
          "unit": "Hz"
        },
        "purpose": "parameter"
      },
      {
        "endpointID": "depth",
        "endpointType": "event",
        "dataType": {
          "type": "float32"
        },
        "annotation": {
          "name": "Depth",
          "min": 0,
          "max": 100,
          "init": 100,
          "unit": "%"
        },
        "purpose": "parameter"
      },
      {
        "endpointID": "bypass",
        "endpointType": "value",
        "dataType": {
          "type": "bool"
        },
        "annotation": {
          "name": "Bypass",
          "boolean": true
        },
        "purpose": "parameter"
      },
      {
        "endpointID": "in",
        "endpointType": "stream",
        "dataType": {
          "type": "float32"
        },
        "purpose": "audio in",
        "numAudioChannels": 1
      }
    ];
  }

  /** Sets the value of endpoint "shape".
   *  @param {Object} newValue - The new value, whose type will depend on the endpoint type
   *  @param {number} numFramesToReachValue - If this is non-zero and the type is scalar,
   *                                          this applies a ramp to reach the new value.
  */
  setInputValue_shape (newValue, numFramesToReachValue)
  {
    this._pack_f32 (this.scratchSpaceAddress, newValue);
    this.instance.exports._setValue_shape (this.stateAddress, this.scratchSpaceAddress, numFramesToReachValue);
  }

  /** Sends an event of type `float32` to endpoint "rate".
   *  @param {number} eventValue - The event to be added to the queue for this endpoint.
   */
  sendInputEvent_rate (eventValue)
  {
    this.instance.exports._sendEvent_rate (this.stateAddress, eventValue);
  }

  /** Sends an event of type `float32` to endpoint "depth".
   *  @param {number} eventValue - The event to be added to the queue for this endpoint.
   */
  sendInputEvent_depth (eventValue)
  {
    this.instance.exports._sendEvent_depth (this.stateAddress, eventValue);
  }

  /** Sets the value of endpoint "bypass".
   *  @param {Object} newValue - The new value, whose type will depend on the endpoint type
   *  @param {number} numFramesToReachValue - If this is non-zero and the type is scalar,
   *                                          this applies a ramp to reach the new value.
  */
  setInputValue_bypass (newValue, numFramesToReachValue)
  {
    this._pack_b (this.scratchSpaceAddress, newValue);
    this.instance.exports._setValue_bypass (this.stateAddress, this.scratchSpaceAddress, numFramesToReachValue);
  }

  /** Stores frames for the input to endpoint "in"
   *
   * @param {Array} sourceChannelArrays - An array of channel arrays to read
   * @param {number} numFramesToWrite   - The number of frames to copy
   * @param {number} sourceChannel      - The source channel to copy from
   */
  setInputStreamFrames_in (sourceChannelArrays, numFramesToWrite, sourceChannel)
  {
    this._setInputFramesInternal_in (sourceChannelArrays, numFramesToWrite, sourceChannel);
  }

  /** Returns a frame from the output stream "out"
   *
   * @param {number} frameIndex - the index of the frame to fetch
   */
  getOutputFrame_out (frameIndex)
  {
    return this._getOutputFrameInternal_out (frameIndex);
  }

  /** Copies frames from the output stream "out" into a destination array.
   *
   * @param {Array} destChannelArrays   - An array of arrays (one per channel) into
   *                                      which the samples will be copied
   * @param {number} maxNumFramesToRead - The maximum number of frames to copy
   * @param {number} destChannel        - The channel to start writing from
   */
  getOutputFrames_out (destChannelArrays, maxNumFramesToRead, destChannel)
  {
    this._getOutputFramesInternal_out (destChannelArrays, maxNumFramesToRead, destChannel);
  }

  //==============================================================================
  // Code beyond this point is private internal implementation detail

  //==============================================================================
  /** @access private */
  async _initialiseInternalSIMD (sessionID, frequency)
  {
    this.stateAddress = 74576;
    this.scratchSpaceAddress = 78896;

    const memory = new WebAssembly.Memory ({ initial: 3 });
    const stack = new WebAssembly.Global ({ value: "i32", mutable: true }, 74576);
    const imports = {
      env: {
        __linear_memory: memory,
        __memory_base: 0,
        __stack_pointer: stack,
        __table_base: 0,
        memcpy:  (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memmove: (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memset:  (dst, value, len) => { this.byteMemory.fill (value, dst, dst + len); return dst; }
      },
    };

    const result = await WebAssembly.instantiate (this._getWasmBytesSIMD(), imports);
    this.instance = result.instance;
    const exports = this.instance.exports;
    const memoryBuffer = exports.memory?.buffer || memory.buffer;
    const memoryDataView = new DataView (memoryBuffer);
    const byteMemory = new Uint8Array (memoryBuffer);
    this.byteMemory = byteMemory;
    this.memoryDataView = memoryDataView;

    exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);

    const advanceFn = exports.advanceBlock ? ((numFrames) => exports.advanceBlock (74576, 74800, numFrames))
                                           : (() => exports.advanceOneFrame (74576, 74800));

    this.reset = () => {
       byteMemory.fill (0, 74576, 74800);
       byteMemory.fill (0, 78896, 78896 + 4);
       exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);
    };

    this._advanceInternal = (numFrames) => {
      byteMemory.fill (0, 76848, 76848 + numFrames * 4);
      advanceFn (numFrames);
    };

    this._setInputFramesInternal_in = (sourceChannelArrays, numFramesToWrite, sourceChannel) => {
      try
      {
        if (numFramesToWrite > 512)
          numFramesToWrite = 512;

        const channelsToCopy = Math.min (1, sourceChannelArrays.length - sourceChannel);
        let dest = 74800;

        for (let frame = 0; frame < numFramesToWrite; ++frame)
        {
          for (let channel = 0; channel < channelsToCopy; ++channel)
            this._pack_f32 (dest + 4 * channel, sourceChannelArrays[sourceChannel + channel][frame]);

          dest += 4;
        }
      }
      catch (error)
      {
        // Sometimes, often at startup, Web Audio provides an empty buffer - causing TypeError on attempt to dereference
        if (! (error instanceof TypeError))
          throw (error);
      }
    };

    this._getOutputFrameInternal_out = (frameIndex) => { return memoryDataView.getFloat32 (76848 + frameIndex * 4, true); };

    this._getOutputFramesInternal_out = (destChannelArrays, maxNumFramesToRead, destChannel) => {
      if (maxNumFramesToRead > 512)
        maxNumFramesToRead = 512;

      const channelsToCopy = Math.min (1, destChannelArrays.length - destChannel);
      let source = 76848;

      for (let frame = 0; frame < maxNumFramesToRead; ++frame)
      {
        for (let channel = 0; channel < channelsToCopy; ++channel)
          destChannelArrays[destChannel + channel][frame] = memoryDataView.getFloat32 (source + 4 * channel, true);

        source += 4;
      }
    };

    this._pack_f32 = (address, newValue) => {
      memoryDataView.setFloat32 (address, newValue, true);
    };

    this._pack_b = (address, newValue) => {
      memoryDataView.setUint8 (address, newValue ? (1 | memoryDataView.getUint8(address)) : (254 & memoryDataView.getUint8(address)));
    };
  }

  //==============================================================================
  /** @access private */
  async _initialiseInternalNonSIMD (sessionID, frequency)
  {
    this.stateAddress = 74592;
    this.scratchSpaceAddress = 78912;

    const memory = new WebAssembly.Memory ({ initial: 3 });
    const stack = new WebAssembly.Global ({ value: "i32", mutable: true }, 74592);
    const imports = {
      env: {
        __linear_memory: memory,
        __memory_base: 0,
        __stack_pointer: stack,
        __table_base: 0,
        memcpy:  (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memmove: (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memset:  (dst, value, len) => { this.byteMemory.fill (value, dst, dst + len); return dst; }
      },
    };

    const result = await WebAssembly.instantiate (this._getWasmBytesNonSIMD(), imports);
    this.instance = result.instance;
    const exports = this.instance.exports;
    const memoryBuffer = exports.memory?.buffer || memory.buffer;
    const memoryDataView = new DataView (memoryBuffer);
    const byteMemory = new Uint8Array (memoryBuffer);
    this.byteMemory = byteMemory;
    this.memoryDataView = memoryDataView;

    exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);

    const advanceFn = exports.advanceBlock ? ((numFrames) => exports.advanceBlock (74592, 74816, numFrames))
                                           : (() => exports.advanceOneFrame (74592, 74816));

    this.reset = () => {
       byteMemory.fill (0, 74592, 74816);
       byteMemory.fill (0, 78912, 78912 + 4);
       exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);
    };

    this._advanceInternal = (numFrames) => {
      byteMemory.fill (0, 76864, 76864 + numFrames * 4);
      advanceFn (numFrames);
    };

    this._setInputFramesInternal_in = (sourceChannelArrays, numFramesToWrite, sourceChannel) => {
      try
      {
        if (numFramesToWrite > 512)
          numFramesToWrite = 512;

        const channelsToCopy = Math.min (1, sourceChannelArrays.length - sourceChannel);
        let dest = 74816;

        for (let frame = 0; frame < numFramesToWrite; ++frame)
        {
          for (let channel = 0; channel < channelsToCopy; ++channel)
            this._pack_f32 (dest + 4 * channel, sourceChannelArrays[sourceChannel + channel][frame]);

          dest += 4;
        }
      }
      catch (error)
      {
        // Sometimes, often at startup, Web Audio provides an empty buffer - causing TypeError on attempt to dereference
        if (! (error instanceof TypeError))
          throw (error);
      }
    };

    this._getOutputFrameInternal_out = (frameIndex) => { return memoryDataView.getFloat32 (76864 + frameIndex * 4, true); };

    this._getOutputFramesInternal_out = (destChannelArrays, maxNumFramesToRead, destChannel) => {
      if (maxNumFramesToRead > 512)
        maxNumFramesToRead = 512;

      const channelsToCopy = Math.min (1, destChannelArrays.length - destChannel);
      let source = 76864;

      for (let frame = 0; frame < maxNumFramesToRead; ++frame)
      {
        for (let channel = 0; channel < channelsToCopy; ++channel)
          destChannelArrays[destChannel + channel][frame] = memoryDataView.getFloat32 (source + 4 * channel, true);

        source += 4;
      }
    };

    this._pack_f32 = (address, newValue) => {
      memoryDataView.setFloat32 (address, newValue, true);
    };

    this._pack_b = (address, newValue) => {
      memoryDataView.setUint8 (address, newValue ? (1 | memoryDataView.getUint8(address)) : (254 & memoryDataView.getUint8(address)));
    };
  }

  /** @access private */
  _getWasmBytesSIMD()
  {
    return new Uint8Array([0,97,115,109,1,0,0,0,1,169,128,128,128,0,6,96,2,127,125,0,96,3,127,127,127,0,96,4,127,127,127,124,0,96,2,127,124,0,96,7,127,124,124,124,127,127,127,0,96,3,127,127,127,1,127,2,201,
      128,128,128,0,4,3,101,110,118,15,95,95,108,105,110,101,97,114,95,109,101,109,111,114,121,2,0,1,3,101,110,118,15,95,95,115,116,97,99,107,95,112,111,105,110,116,101,114,3,127,1,3,101,110,118,6,109,101,109,
      99,112,121,0,5,3,101,110,118,6,109,101,109,115,101,116,0,5,3,137,128,128,128,0,8,0,0,1,1,2,3,4,1,7,231,128,128,128,0,6,15,95,115,101,110,100,69,118,101,110,116,95,114,97,116,101,0,2,16,95,115,101,110,100,
      69,118,101,110,116,95,100,101,112,116,104,0,3,15,95,115,101,116,86,97,108,117,101,95,115,104,97,112,101,0,4,16,95,115,101,116,86,97,108,117,101,95,98,121,112,97,115,115,0,5,10,105,110,105,116,105,97,108,
      105,115,101,0,6,12,97,100,118,97,110,99,101,66,108,111,99,107,0,9,12,129,128,128,128,0,2,10,161,190,128,128,0,8,46,0,32,0,65,56,106,68,0,0,0,0,0,0,240,63,65,0,43,3,128,128,128,128,0,163,182,32,1,148,34,
      1,56,2,0,32,0,65,240,0,106,32,1,56,2,0,11,238,1,4,1,127,2,125,1,124,3,127,32,0,65,28,106,32,1,67,10,215,35,60,148,34,1,56,2,0,32,0,65,212,0,106,32,1,56,2,0,32,0,65,24,106,34,2,42,2,0,33,3,32,2,32,1,56,
      2,0,32,0,65,208,0,106,34,2,42,2,0,33,4,32,2,32,1,56,2,0,2,64,2,64,65,0,43,3,128,128,128,128,0,34,5,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,5,170,33,2,12,1,11,65,128,128,128,128,120,33,2,11,32,0,65,36,106,
      34,6,40,2,0,33,7,32,6,32,2,65,50,109,34,2,65,1,32,2,65,1,74,27,34,2,54,2,0,32,0,65,220,0,106,34,6,40,2,0,33,8,32,6,32,2,54,2,0,32,0,65,32,106,34,6,32,1,32,3,32,6,42,2,0,32,7,178,148,147,147,32,2,178,34,
      3,149,56,2,0,32,0,65,216,0,106,34,0,32,1,32,4,32,0,42,2,0,32,8,178,148,147,147,32,3,149,56,2,0,11,75,1,1,125,2,64,32,0,65,208,1,106,40,2,0,13,0,32,0,32,0,40,2,0,65,1,106,54,2,0,11,32,1,42,2,0,33,3,32,0,
      32,2,65,1,32,2,27,34,2,54,2,208,1,32,0,65,204,1,106,32,3,32,0,42,2,200,1,147,32,2,178,149,56,2,0,11,16,0,32,0,32,1,45,0,0,65,1,113,58,0,212,1,11,239,3,5,3,127,1,124,2,125,1,126,1,123,35,128,128,128,128,
      0,65,48,107,34,4,36,128,128,128,128,0,65,0,32,3,57,3,128,128,128,128,0,32,1,32,1,40,2,0,34,5,65,1,106,34,6,54,2,0,65,0,32,3,57,3,128,128,128,128,0,32,0,65,200,0,106,32,6,54,2,0,32,0,65,56,106,68,0,0,0,
      0,0,0,240,63,32,3,163,34,7,182,34,8,56,2,0,32,0,65,60,106,32,7,68,0,0,0,0,0,0,78,64,163,182,67,0,0,240,66,148,34,9,56,2,0,32,0,65,32,106,66,0,55,2,0,32,0,65,24,106,66,128,128,128,252,131,128,128,192,63,
      55,2,0,32,0,65,192,0,106,32,5,65,201,3,106,172,34,10,66,32,136,32,10,132,66,255,255,255,255,7,131,55,3,0,32,1,32,1,40,2,0,34,5,65,1,106,34,6,54,2,0,65,0,32,3,57,3,128,128,128,128,0,32,0,65,128,1,106,32,
      6,54,2,0,32,0,65,240,0,106,32,8,56,2,0,32,0,65,244,0,106,32,9,56,2,0,32,0,65,216,0,106,66,0,55,2,0,32,0,65,208,0,106,66,128,128,128,252,131,128,128,192,63,55,2,0,32,0,65,172,1,106,65,1,58,0,0,32,0,65,248,
      0,106,32,5,65,201,3,106,172,34,10,66,32,136,32,10,132,66,255,255,255,255,7,131,55,3,0,32,4,65,8,106,65,32,106,34,1,65,0,54,2,0,32,4,65,24,106,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,11,253,11,3,0,32,
      4,32,11,253,11,3,8,32,4,65,8,106,32,3,16,135,128,128,128,0,32,4,65,16,106,40,2,0,33,5,32,4,65,36,106,42,2,0,33,8,32,4,41,3,8,33,10,32,4,253,0,2,20,33,11,32,0,65,168,1,106,32,1,40,2,0,54,2,0,32,0,65,164,
      1,106,32,8,56,2,0,32,0,65,148,1,106,32,11,253,11,2,0,32,0,65,144,1,106,32,5,54,2,0,32,0,65,136,1,106,32,10,55,2,0,32,4,65,48,106,36,128,128,128,128,0,11,189,22,6,1,127,2,124,1,126,2,127,4,124,1,127,35,
      128,128,128,128,0,65,32,107,34,2,36,128,128,128,128,0,2,64,2,64,68,0,0,0,0,0,0,224,63,32,1,163,34,3,32,1,68,184,30,133,235,81,184,222,63,162,34,4,68,0,0,0,0,0,0,73,64,32,4,68,0,0,0,0,0,0,73,64,99,27,68,
      0,0,0,0,0,0,0,0,165,68,24,45,68,84,251,33,25,64,162,162,34,4,189,34,5,66,32,136,167,34,6,65,255,255,255,255,7,113,34,7,65,251,195,164,255,3,75,13,0,32,7,65,128,128,128,242,3,73,13,1,65,0,33,6,2,64,32,5,
      66,128,128,128,128,128,255,255,255,255,0,131,66,129,128,128,128,240,132,229,242,63,84,34,7,13,0,68,24,45,68,84,251,33,233,63,32,4,154,32,4,32,5,66,0,83,27,161,68,7,92,20,51,38,166,129,60,160,33,4,32,5,
      66,63,136,167,33,6,11,32,4,32,4,32,4,32,4,162,34,8,162,34,9,68,99,85,85,85,85,85,213,63,162,32,8,32,9,32,8,32,8,162,34,10,32,10,32,10,32,10,32,10,68,115,83,96,219,203,117,243,190,162,68,166,146,55,160,
      136,126,20,63,160,162,68,1,101,242,242,216,68,67,63,160,162,68,40,3,86,201,34,109,109,63,160,162,68,55,214,6,132,244,100,150,63,160,162,68,122,254,16,17,17,17,193,63,160,32,8,32,10,32,10,32,10,32,10,32,
      10,68,212,122,191,116,112,42,251,62,162,68,233,167,240,50,15,184,18,63,160,162,68,104,16,141,26,247,38,48,63,160,162,68,21,131,224,254,200,219,87,63,160,162,68,147,132,110,233,227,38,130,63,160,162,68,
      254,65,179,27,186,161,171,63,160,162,160,162,68,0,0,0,0,0,0,0,0,160,162,68,0,0,0,0,0,0,0,0,160,160,34,8,160,33,10,2,64,32,7,69,13,0,32,10,33,4,12,2,11,68,0,0,0,0,0,0,240,63,32,4,32,8,32,10,32,10,162,32,
      10,68,0,0,0,0,0,0,240,63,160,163,161,160,34,4,32,4,160,161,34,4,154,32,4,32,6,27,33,4,12,1,11,2,64,32,7,65,255,255,191,255,7,75,13,0,2,64,2,64,2,64,32,7,65,250,212,189,128,4,75,13,0,2,64,32,6,65,255,255,
      63,113,65,251,195,36,71,13,0,2,64,32,7,65,20,118,34,7,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,
      68,49,99,98,26,97,180,208,61,162,34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,17,72,13,0,2,64,32,7,32,4,32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,68,115,112,3,46,138,25,163,59,162,
      32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,50,78,13,0,32,11,33,4,12,1,11,32,11,32,8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,
      57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,33,7,12,4,11,65,128,128,128,128,120,33,7,12,3,11,2,64,32,7,65,
      252,178,139,128,4,75,13,0,2,64,32,5,66,127,87,13,0,32,4,68,0,0,64,84,251,33,249,191,160,34,4,32,4,68,49,99,98,26,97,180,208,189,160,34,10,161,68,49,99,98,26,97,180,208,189,160,33,9,65,1,33,7,12,4,11,32,
      4,68,0,0,64,84,251,33,249,63,160,34,4,32,4,68,49,99,98,26,97,180,208,61,160,34,10,161,68,49,99,98,26,97,180,208,61,160,33,9,65,127,33,7,12,3,11,32,5,66,127,85,13,1,32,4,68,0,0,64,84,251,33,9,64,160,34,
      4,32,4,68,49,99,98,26,97,180,224,61,160,34,10,161,68,49,99,98,26,97,180,224,61,160,33,9,65,126,33,7,12,2,11,2,64,2,64,2,64,2,64,2,64,32,7,65,188,140,241,128,4,73,13,0,32,7,65,251,195,228,137,4,79,13,3,
      32,7,65,20,118,34,7,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,68,49,99,98,26,97,180,208,61,162,
      34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,17,72,13,2,32,7,32,4,32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,68,115,112,3,46,138,25,163,59,162,32,4,32,11,161,32,10,161,161,34,9,161,
      34,10,189,66,52,136,167,65,255,15,113,107,65,50,78,13,1,32,11,33,4,12,2,11,2,64,2,64,2,64,2,64,32,7,65,189,251,215,128,4,73,13,0,32,7,65,251,195,228,128,4,71,13,3,32,4,32,4,68,131,200,201,109,48,95,228,
      63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,68,49,99,98,26,97,180,208,61,162,34,9,161,34,10,189,66,128,128,128,128,128,128,128,248,255,0,
      131,66,255,255,255,255,255,255,255,135,63,86,13,2,32,4,32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,68,115,112,3,46,138,25,163,59,162,32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,128,
      128,128,128,128,128,128,128,255,0,131,66,255,255,255,255,255,255,255,255,60,88,13,1,32,11,33,4,12,2,11,32,7,65,252,178,203,128,4,70,13,6,2,64,32,5,66,0,83,13,0,32,4,68,0,0,48,127,124,217,18,192,160,34,
      4,32,4,68,202,148,147,167,145,14,233,189,160,34,10,161,68,202,148,147,167,145,14,233,189,160,33,9,65,3,33,7,12,9,11,32,4,68,0,0,48,127,124,217,18,64,160,34,4,32,4,68,202,148,147,167,145,14,233,61,160,34,
      10,161,68,202,148,147,167,145,14,233,61,160,33,9,65,125,33,7,12,8,11,32,11,32,8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,57,162,32,11,32,4,161,32,10,161,161,34,9,161,
      33,10,11,32,4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,33,7,12,7,11,65,128,128,128,128,120,33,7,12,6,11,2,64,32,5,66,0,83,13,0,32,4,68,0,0,64,84,251,33,25,192,160,
      34,4,32,4,68,49,99,98,26,97,180,240,189,160,34,10,161,68,49,99,98,26,97,180,240,189,160,33,9,65,4,33,7,12,6,11,32,4,68,0,0,64,84,251,33,25,64,160,34,4,32,4,68,49,99,98,26,97,180,240,61,160,34,10,161,68,
      49,99,98,26,97,180,240,61,160,33,9,65,124,33,7,12,5,11,32,11,32,8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,
      4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,33,7,12,4,11,65,128,128,128,128,120,33,7,12,3,11,2,64,2,64,32,5,66,255,255,255,255,255,255,255,7,131,66,128,128,128,128,
      128,128,128,176,193,0,132,191,34,4,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,4,170,33,6,12,1,11,65,128,128,128,128,120,33,6,11,2,64,2,64,32,4,32,6,183,34,10,161,68,0,0,0,0,0,0,112,65,162,34,4,153,68,0,0,
      0,0,0,0,224,65,99,69,13,0,32,4,170,33,12,12,1,11,65,128,128,128,128,120,33,12,11,32,2,65,8,106,32,10,32,12,183,34,8,32,4,32,8,161,68,0,0,0,0,0,0,112,65,162,34,4,32,7,65,20,118,65,234,119,106,65,3,65,2,
      32,6,65,0,71,32,12,27,32,4,68,0,0,0,0,0,0,0,0,100,32,4,68,0,0,0,0,0,0,0,0,99,114,27,65,1,16,136,128,128,128,0,32,2,43,3,24,33,9,32,2,43,3,16,33,10,32,2,40,2,8,33,7,32,5,66,127,85,13,2,65,0,32,7,107,33,
      7,32,9,154,33,9,32,10,154,33,10,12,2,11,2,64,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,68,49,99,
      98,26,97,180,208,61,162,34,9,161,34,10,189,66,128,128,128,128,128,128,128,248,255,0,131,66,255,255,255,255,255,255,255,135,63,86,13,0,2,64,32,4,32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,
      68,115,112,3,46,138,25,163,59,162,32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,128,128,128,128,128,128,128,128,255,0,131,66,255,255,255,255,255,255,255,255,60,88,13,0,32,11,33,4,12,1,11,32,11,32,
      8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,
      69,13,0,32,8,170,33,7,12,2,11,65,128,128,128,128,120,33,7,12,1,11,32,4,68,0,0,64,84,251,33,9,192,160,34,4,32,4,68,49,99,98,26,97,180,224,189,160,34,10,161,68,49,99,98,26,97,180,224,189,160,33,9,65,2,33,
      7,11,65,0,33,12,2,64,32,10,189,34,5,66,128,128,128,128,128,255,255,255,255,0,131,66,129,128,128,128,240,132,229,242,63,84,34,6,13,0,68,24,45,68,84,251,33,233,63,32,10,154,32,10,32,5,66,0,83,34,12,27,161,
      68,7,92,20,51,38,166,129,60,32,9,154,32,9,32,12,27,161,160,33,10,32,5,66,63,136,167,33,12,68,0,0,0,0,0,0,0,0,33,9,11,32,7,65,1,113,33,7,32,10,32,10,32,10,32,10,162,34,8,162,34,11,68,99,85,85,85,85,85,213,
      63,162,32,9,32,8,32,9,32,11,32,8,32,8,162,34,4,32,4,32,4,32,4,32,4,68,115,83,96,219,203,117,243,190,162,68,166,146,55,160,136,126,20,63,160,162,68,1,101,242,242,216,68,67,63,160,162,68,40,3,86,201,34,109,
      109,63,160,162,68,55,214,6,132,244,100,150,63,160,162,68,122,254,16,17,17,17,193,63,160,32,8,32,4,32,4,32,4,32,4,32,4,68,212,122,191,116,112,42,251,62,162,68,233,167,240,50,15,184,18,63,160,162,68,104,
      16,141,26,247,38,48,63,160,162,68,21,131,224,254,200,219,87,63,160,162,68,147,132,110,233,227,38,130,63,160,162,68,254,65,179,27,186,161,171,63,160,162,160,162,160,162,160,160,34,8,160,33,4,2,64,32,6,13,
      0,65,1,32,7,65,1,116,107,183,34,9,32,10,32,8,32,4,32,4,162,32,4,32,9,160,163,161,160,34,4,32,4,160,161,34,4,154,32,4,32,12,27,33,4,12,2,11,32,7,69,13,1,68,0,0,0,0,0,0,240,191,32,4,163,34,9,32,4,189,66,
      128,128,128,128,112,131,191,34,11,32,9,189,66,128,128,128,128,112,131,191,34,4,162,68,0,0,0,0,0,0,240,63,160,32,8,32,11,32,10,161,161,32,4,162,160,162,32,4,160,33,4,12,1,11,32,4,32,4,161,33,4,11,32,0,65,
      16,106,32,3,32,1,32,1,160,32,4,162,162,34,4,182,56,2,0,32,0,65,20,106,32,4,68,205,59,127,102,158,160,246,63,160,182,56,2,0,32,0,68,0,0,0,0,0,0,240,63,32,4,32,4,162,32,4,68,205,59,127,102,158,160,246,63,
      162,68,0,0,0,0,0,0,240,63,160,160,163,182,56,2,12,32,2,65,32,106,36,128,128,128,128,0,11,221,25,9,10,127,1,124,1,127,1,123,2,127,1,124,10,127,1,124,3,127,35,128,128,128,128,0,65,192,6,107,34,7,36,128,128,
      128,128,0,32,7,65,184,4,106,65,144,128,128,128,0,65,136,2,16,128,128,128,128,0,26,32,7,66,128,128,128,128,208,227,252,180,53,55,3,176,4,32,7,66,128,128,128,128,168,196,224,241,54,55,3,168,4,32,7,66,128,
      128,128,128,132,164,137,189,56,55,3,160,4,32,7,66,128,128,128,128,184,240,134,248,57,55,3,152,4,32,7,66,128,128,128,128,150,138,179,188,59,55,3,144,4,32,7,66,128,128,128,128,136,211,145,252,60,55,3,136,
      4,32,7,66,128,128,128,128,208,133,145,186,62,55,3,128,4,32,7,66,128,128,128,128,180,191,200,252,63,55,3,248,3,65,0,33,8,32,7,65,248,2,106,65,0,65,128,1,16,129,128,128,128,0,26,32,7,65,248,1,106,65,0,65,
      128,1,16,129,128,128,128,0,26,32,7,65,248,0,106,65,0,65,128,1,16,129,128,128,128,0,26,32,4,65,125,106,65,24,109,34,9,65,0,32,9,65,0,74,27,34,10,65,104,108,32,4,106,33,11,2,64,32,6,65,3,106,34,12,32,5,65,
      127,106,34,13,106,34,14,65,0,72,13,0,32,10,65,2,116,32,5,65,2,116,107,32,7,65,184,4,106,106,65,4,106,33,9,32,10,32,13,107,34,15,33,4,3,64,32,4,65,194,0,110,33,16,2,64,2,64,32,15,32,8,106,65,127,74,13,0,
      68,0,0,0,0,0,0,0,0,33,17,12,1,11,32,9,32,16,65,248,125,108,106,40,2,0,183,33,17,11,32,7,65,248,2,106,32,8,65,15,113,65,3,116,106,32,17,57,3,0,32,9,65,4,106,33,9,32,4,65,1,106,33,4,32,8,65,1,106,34,8,32,
      14,76,13,0,11,11,32,11,65,104,106,33,18,2,64,32,12,65,127,76,13,0,65,0,33,8,2,64,32,5,65,0,74,13,0,3,64,32,7,65,248,0,106,32,8,65,15,113,65,3,116,106,66,0,55,3,0,32,8,65,1,106,34,8,32,12,76,13,0,12,2,11,
      11,65,0,33,16,3,64,68,0,0,0,0,0,0,0,0,33,17,32,7,65,224,0,106,33,8,32,13,33,4,65,0,33,9,3,64,32,7,32,3,57,3,112,32,7,32,2,57,3,104,32,7,32,1,57,3,96,32,17,32,8,32,9,65,3,110,65,104,108,106,43,3,0,32,7,
      65,248,2,106,32,16,32,4,106,65,15,113,65,3,116,106,43,3,0,162,160,33,17,32,8,65,8,106,33,8,32,9,65,1,106,33,9,32,4,65,127,106,34,4,65,127,71,13,0,11,32,7,65,248,0,106,32,16,65,15,113,65,3,116,106,32,17,
      57,3,0,32,16,65,1,106,34,16,32,12,76,13,0,11,11,32,7,65,32,106,65,48,106,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,19,253,11,3,0,32,7,65,192,0,106,32,19,253,11,3,0,32,7,65,48,106,32,19,253,11,3,0,32,7,
      32,19,253,11,3,32,32,18,32,11,65,177,7,106,34,20,32,18,65,129,120,74,34,8,27,33,21,68,0,0,0,0,0,0,240,63,68,0,0,0,0,0,0,96,3,32,8,27,33,22,32,6,65,2,106,33,23,65,47,32,11,107,33,24,65,48,32,11,107,33,25,
      32,18,65,128,8,72,33,26,32,11,65,233,119,106,34,27,65,255,7,75,33,28,32,11,65,103,106,33,29,32,18,65,184,112,74,33,30,32,18,65,130,120,72,33,31,32,12,33,14,2,64,3,64,32,7,65,248,0,106,32,14,34,16,65,15,
      113,34,32,65,3,116,106,43,3,0,33,17,2,64,32,16,65,1,72,34,15,13,0,32,16,65,15,106,33,8,65,0,33,4,3,64,32,4,65,15,113,65,2,116,33,9,2,64,2,64,32,17,68,0,0,0,0,0,0,112,62,162,34,33,153,68,0,0,0,0,0,0,224,
      65,99,69,13,0,32,33,170,33,14,12,1,11,65,128,128,128,128,120,33,14,11,32,7,65,32,106,32,9,106,33,9,2,64,2,64,32,17,32,14,183,34,33,68,0,0,0,0,0,0,112,193,162,160,34,17,153,68,0,0,0,0,0,0,224,65,99,69,13,
      0,32,17,170,33,14,12,1,11,65,128,128,128,128,120,33,14,11,32,9,32,14,54,2,0,32,7,65,248,0,106,32,8,65,15,113,65,3,116,106,43,3,0,32,33,160,33,17,32,4,65,1,106,33,4,32,8,65,127,106,34,8,65,15,71,13,0,11,
      11,2,64,2,64,2,64,2,64,32,26,13,0,32,17,68,0,0,0,0,0,0,224,127,162,33,17,32,28,13,1,32,27,33,8,12,3,11,32,31,13,1,32,18,33,8,12,2,11,32,17,68,0,0,0,0,0,0,224,127,162,33,17,32,18,65,253,23,32,18,65,253,
      23,72,27,65,130,112,106,33,8,12,1,11,32,17,68,0,0,0,0,0,0,96,3,162,33,17,2,64,32,18,65,184,112,77,13,0,32,20,33,8,12,1,11,32,17,68,0,0,0,0,0,0,96,3,162,33,17,32,18,65,240,104,32,18,65,240,104,74,27,65,
      146,15,106,33,8,11,2,64,2,64,32,17,32,8,65,255,7,106,173,66,52,134,191,162,34,17,32,17,68,0,0,0,0,0,0,192,63,162,156,68,0,0,0,0,0,0,32,192,162,160,34,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,
      13,12,1,11,65,128,128,128,128,120,33,13,11,32,17,32,13,183,161,33,17,2,64,2,64,2,64,2,64,2,64,32,18,65,1,72,34,34,13,0,32,7,65,32,106,32,16,65,127,106,65,15,113,65,2,116,106,34,8,32,8,40,2,0,34,8,32,8,
      32,25,117,34,8,32,25,116,107,34,4,54,2,0,32,4,32,24,117,33,35,32,8,32,13,106,33,13,12,1,11,2,64,32,18,13,0,32,7,65,32,106,32,16,65,127,106,65,15,113,65,2,116,106,40,2,0,65,23,117,33,35,12,1,11,65,2,33,
      35,65,0,33,36,32,17,68,0,0,0,0,0,0,224,63,102,69,13,3,12,1,11,32,35,65,0,76,13,1,11,2,64,2,64,32,15,69,13,0,65,0,33,14,12,1,11,65,0,33,8,65,0,33,14,3,64,32,7,65,32,106,32,8,65,15,113,65,2,116,106,34,15,
      40,2,0,33,4,65,255,255,255,7,33,9,2,64,2,64,32,14,65,1,113,13,0,65,128,128,128,8,33,9,32,4,13,0,65,0,33,14,12,1,11,32,15,32,9,32,4,107,54,2,0,65,1,33,14,11,32,16,32,8,65,1,106,34,8,71,13,0,11,11,2,64,32,
      34,13,0,65,255,255,255,3,33,8,2,64,2,64,32,29,14,2,1,0,2,11,65,255,255,255,1,33,8,11,32,7,65,32,106,32,16,65,127,106,65,15,113,65,2,116,106,34,4,32,4,40,2,0,32,8,113,54,2,0,11,32,13,65,1,106,33,13,32,35,
      65,2,71,13,0,68,0,0,0,0,0,0,240,63,32,17,161,33,17,65,2,33,36,32,14,69,13,1,2,64,2,64,32,26,13,0,68,0,0,0,0,0,0,224,127,33,33,32,27,33,8,32,28,69,13,1,32,18,65,253,23,32,18,65,253,23,72,27,65,130,112,106,
      33,8,68,0,0,0,0,0,0,240,127,33,33,12,1,11,32,22,33,33,32,21,33,8,32,30,13,0,32,18,65,240,104,32,18,65,240,104,74,27,65,146,15,106,33,8,68,0,0,0,0,0,0,0,0,33,33,11,32,17,32,33,32,8,65,255,7,106,173,66,52,
      134,191,162,161,33,17,12,1,11,32,35,33,36,11,2,64,32,17,68,0,0,0,0,0,0,0,0,98,13,0,2,64,32,16,65,127,106,34,8,32,12,72,13,0,65,0,33,4,3,64,32,7,65,32,106,32,8,65,15,113,65,2,116,106,40,2,0,32,4,114,33,
      4,32,8,65,127,106,34,8,32,12,78,13,0,11,32,4,69,13,0,32,18,33,11,3,64,32,11,65,104,106,33,11,32,7,65,32,106,32,16,65,127,106,34,16,65,15,113,65,2,116,106,40,2,0,69,13,0,12,4,11,11,32,23,33,8,32,16,33,14,
      3,64,32,14,65,1,106,33,14,32,8,65,15,113,33,4,32,8,65,127,106,33,8,32,7,65,32,106,32,4,65,2,116,106,40,2,0,69,13,0,11,32,16,65,1,106,34,15,32,14,74,13,1,3,64,32,7,65,248,2,106,32,16,32,5,106,65,15,113,
      65,3,116,106,32,7,65,184,4,106,32,15,32,10,106,65,194,0,111,34,8,65,194,0,106,32,8,32,8,65,0,72,27,65,2,116,106,40,2,0,183,57,3,0,68,0,0,0,0,0,0,0,0,33,17,2,64,32,5,65,1,72,13,0,65,0,33,8,32,7,65,8,106,
      33,4,32,5,33,9,3,64,32,7,32,3,57,3,24,32,7,32,2,57,3,16,32,7,32,1,57,3,8,32,17,32,4,32,8,65,3,110,65,104,108,106,43,3,0,32,7,65,248,2,106,32,16,32,9,106,65,15,113,65,3,116,106,43,3,0,162,160,33,17,32,4,
      65,8,106,33,4,32,8,65,1,106,33,8,32,9,65,127,106,34,9,13,0,11,11,32,7,65,248,0,106,32,15,65,15,113,65,3,116,106,32,17,57,3,0,32,16,65,1,106,33,16,32,15,65,1,106,34,15,32,14,74,13,2,12,0,11,11,11,2,64,2,
      64,2,64,65,24,32,11,107,34,8,65,128,8,72,13,0,32,17,68,0,0,0,0,0,0,224,127,162,33,17,65,153,120,32,11,107,34,4,65,255,7,75,13,1,32,4,33,8,12,2,11,32,8,65,130,120,78,13,1,32,17,68,0,0,0,0,0,0,96,3,162,33,
      17,2,64,32,8,65,184,112,77,13,0,65,225,7,32,11,107,33,8,12,2,11,32,17,68,0,0,0,0,0,0,96,3,162,33,17,32,8,65,240,104,32,8,65,240,104,74,27,65,146,15,106,33,8,12,1,11,32,17,68,0,0,0,0,0,0,224,127,162,33,
      17,32,8,65,253,23,32,8,65,253,23,72,27,65,130,112,106,33,8,11,2,64,2,64,32,17,32,8,65,255,7,106,173,66,52,134,191,162,34,17,68,0,0,0,0,0,0,112,65,102,69,13,0,32,32,65,2,116,33,4,2,64,2,64,32,17,68,0,0,
      0,0,0,0,112,62,162,34,3,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,3,170,33,8,12,1,11,65,128,128,128,128,120,33,8,11,32,7,65,32,106,32,4,106,33,4,2,64,2,64,32,17,32,8,183,68,0,0,0,0,0,0,112,193,162,160,34,
      17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,9,12,1,11,65,128,128,128,128,120,33,9,11,32,4,32,9,54,2,0,32,16,65,1,106,34,16,65,15,113,33,32,12,1,11,2,64,2,64,32,17,153,68,0,0,0,0,0,0,224,65,99,
      69,13,0,32,17,170,33,8,12,1,11,65,128,128,128,128,120,33,8,11,32,18,33,11,11,32,7,65,32,106,32,32,65,2,116,106,32,8,54,2,0,11,2,64,2,64,32,11,65,128,8,72,13,0,68,0,0,0,0,0,0,224,127,33,17,32,11,65,129,
      120,106,34,8,65,255,7,77,13,1,32,11,65,253,23,32,11,65,253,23,72,27,65,130,112,106,33,8,68,0,0,0,0,0,0,240,127,33,17,12,1,11,68,0,0,0,0,0,0,240,63,33,17,2,64,32,11,65,130,120,72,13,0,32,11,33,8,12,1,11,
      2,64,32,11,65,184,112,77,13,0,32,11,65,201,7,106,33,8,68,0,0,0,0,0,0,96,3,33,17,12,1,11,32,11,65,240,104,32,11,65,240,104,74,27,65,146,15,106,33,8,68,0,0,0,0,0,0,0,0,33,17,11,68,0,0,0,0,0,0,0,0,33,2,68,
      0,0,0,0,0,0,0,0,33,3,2,64,32,16,65,0,72,13,0,32,17,32,8,65,255,7,106,173,66,52,134,191,162,33,17,32,16,33,8,3,64,32,7,65,248,0,106,32,8,65,15,113,34,4,65,3,116,106,32,17,32,7,65,32,106,32,4,65,2,116,106,
      40,2,0,183,162,57,3,0,32,17,68,0,0,0,0,0,0,112,62,162,33,17,32,8,65,127,106,34,8,65,127,71,13,0,11,68,0,0,0,0,0,0,0,0,33,3,32,16,65,0,72,13,0,2,64,2,64,32,12,65,127,76,13,0,32,16,33,8,3,64,2,64,2,64,32,
      16,32,8,34,4,107,34,9,65,0,78,13,0,68,0,0,0,0,0,0,0,0,33,17,12,1,11,68,0,0,0,0,0,0,0,0,33,17,65,0,33,8,3,64,32,17,32,7,65,248,3,106,32,8,65,7,113,65,3,116,106,43,3,0,32,7,65,248,0,106,32,4,32,8,106,65,
      15,113,65,3,116,106,43,3,0,162,160,33,17,32,8,65,1,106,34,8,32,12,74,13,1,32,8,32,9,76,13,0,11,11,32,7,65,248,1,106,32,9,65,15,113,65,3,116,106,32,17,57,3,0,32,4,65,127,106,33,8,32,4,65,0,74,13,0,12,2,
      11,11,32,16,65,1,106,33,4,65,0,33,8,3,64,32,7,65,248,1,106,32,8,65,15,113,65,3,116,106,66,0,55,3,0,32,4,32,8,65,1,106,34,8,71,13,0,11,11,68,0,0,0,0,0,0,0,0,33,3,32,16,65,0,72,13,0,68,0,0,0,0,0,0,0,0,33,
      3,32,16,33,8,3,64,32,3,32,7,65,248,1,106,32,8,65,15,113,65,3,116,106,43,3,0,160,33,3,32,8,65,127,106,34,8,65,127,71,13,0,11,11,2,64,32,6,69,13,0,32,7,43,3,248,1,32,3,161,33,17,2,64,32,16,65,1,72,13,0,65,
      1,33,8,3,64,32,17,32,7,65,248,1,106,32,8,65,15,113,65,3,116,106,43,3,0,160,33,17,32,8,65,1,106,34,8,32,16,76,13,0,11,11,32,17,154,32,17,32,36,27,33,2,11,32,0,32,2,57,3,16,32,0,32,13,65,7,113,54,2,0,32,
      0,32,3,154,32,3,32,36,27,57,3,8,32,7,65,192,6,106,36,128,128,128,128,0,11,147,7,2,2,127,7,125,2,64,32,0,40,2,4,32,2,70,13,0,32,0,65,136,1,106,33,3,3,64,2,64,32,0,40,2,0,69,13,0,2,64,32,0,40,2,208,1,69,
      13,0,32,0,32,0,42,2,200,1,32,0,42,2,204,1,146,56,2,200,1,32,0,32,0,40,2,208,1,65,127,106,34,4,54,2,208,1,32,4,13,0,32,0,32,0,40,2,0,65,127,106,54,2,0,11,32,0,32,0,42,2,200,1,56,2,192,1,11,32,0,32,0,45,
      0,212,1,65,1,113,58,0,196,1,32,1,32,0,40,2,4,65,2,116,106,42,2,0,33,5,32,0,32,0,42,2,192,1,56,2,184,1,67,0,0,0,0,33,6,67,0,0,0,0,33,7,2,64,32,0,40,2,76,65,127,70,13,0,2,64,2,64,32,0,40,2,36,34,4,65,1,72,
      13,0,32,0,32,4,65,127,106,34,4,54,2,36,32,0,42,2,24,32,0,42,2,32,32,4,178,148,147,33,7,12,1,11,32,0,42,2,24,33,7,11,32,7,67,0,0,128,64,148,32,0,42,2,48,34,8,148,33,9,2,64,2,64,32,8,67,0,0,0,63,94,69,13,
      0,32,7,67,0,0,64,64,148,67,0,0,0,0,146,32,9,147,33,7,12,1,11,67,0,0,0,0,32,7,147,32,9,146,33,7,11,2,64,32,8,32,0,42,2,56,146,34,8,67,0,0,128,63,96,69,13,0,3,64,32,8,67,0,0,128,191,146,34,8,67,0,0,128,63,
      96,13,0,11,11,32,7,67,0,0,0,0,146,33,7,32,0,65,1,54,2,76,32,0,32,8,56,2,48,11,2,64,32,0,40,2,132,1,65,127,70,13,0,2,64,2,64,32,0,40,2,92,34,4,65,1,72,13,0,32,0,32,4,65,127,106,34,4,54,2,92,32,0,42,2,80,
      32,0,42,2,88,32,4,178,148,147,33,8,12,1,11,32,0,42,2,80,33,8,11,32,8,140,32,8,32,0,42,2,104,34,6,67,0,0,0,63,94,27,33,9,2,64,32,6,32,0,42,2,112,146,34,8,67,0,0,128,63,96,69,13,0,3,64,32,8,67,0,0,128,191,
      146,34,8,67,0,0,128,63,96,13,0,11,11,32,9,67,0,0,0,0,146,33,6,32,0,65,1,54,2,132,1,32,0,32,8,56,2,104,11,67,0,0,0,0,33,8,2,64,32,0,40,2,180,1,34,4,65,127,70,13,0,32,6,32,0,42,2,184,1,148,67,10,215,35,60,
      148,67,0,0,0,0,146,33,8,2,64,2,64,32,4,65,0,76,13,0,32,0,32,0,40,2,176,1,65,127,106,34,4,54,2,176,1,32,4,65,0,78,13,1,11,2,64,32,0,45,0,172,1,69,13,0,32,0,65,0,54,2,168,1,32,3,65,0,43,3,128,128,128,128,
      0,16,135,128,128,128,0,32,0,65,0,58,0,172,1,11,32,0,65,31,54,2,176,1,11,32,0,32,0,42,2,152,1,34,9,32,0,42,2,148,1,32,8,32,0,42,2,156,1,32,0,42,2,160,1,34,6,148,147,32,0,42,2,164,1,34,10,147,148,34,8,148,
      34,11,32,6,32,11,146,34,6,146,56,2,160,1,32,0,32,9,32,6,148,34,9,32,10,32,9,146,34,9,146,56,2,164,1,2,64,2,64,2,64,32,0,40,2,168,1,14,2,0,2,1,11,32,9,33,8,12,1,11,32,6,33,8,11,32,0,65,1,54,2,180,1,32,8,
      67,0,0,0,0,146,33,8,11,32,1,32,0,40,2,4,65,2,116,106,65,128,16,106,32,5,67,0,0,128,63,32,8,32,7,32,0,42,2,184,1,67,10,215,35,188,148,67,0,0,128,63,146,148,67,0,0,0,0,146,146,67,0,0,0,63,148,67,0,0,0,63,
      146,32,0,45,0,196,1,27,148,67,0,0,0,0,146,56,2,0,32,0,32,0,40,2,4,65,1,106,34,4,54,2,4,32,4,32,2,71,13,0,11,11,32,0,65,0,54,2,4,11,11,156,130,128,128,0,2,0,65,0,11,8,0,0,0,0,0,0,0,0,0,65,16,11,136,2,131,
      249,162,0,68,78,110,0,252,41,21,0,209,87,39,0,221,52,245,0,98,219,192,0,60,153,149,0,65,144,67,0,99,81,254,0,187,222,171,0,183,97,197,0,58,110,36,0,210,77,66,0,73,6,224,0,9,234,46,0,28,146,209,0,235,29,
      254,0,41,177,28,0,232,62,167,0,245,53,130,0,68,187,46,0,156,233,132,0,180,38,112,0,65,126,95,0,214,145,57,0,83,131,57,0,156,244,57,0,139,95,132,0,40,249,189,0,248,31,59,0,222,255,151,0,15,152,5,0,17,47,
      239,0,10,90,139,0,109,31,109,0,207,126,54,0,9,203,39,0,70,79,183,0,158,102,63,0,45,234,95,0,186,39,117,0,229,235,199,0,61,123,241,0,247,57,7,0,146,82,138,0,251,107,234,0,31,177,95,0,8,93,141,0,48,3,86,
      0,123,252,70,0,240,171,107,0,32,188,207,0,54,244,154,0,227,169,29,0,94,97,145,0,8,27,230,0,133,153,101,0,160,20,95,0,141,64,104,0,128,216,255,0,39,115,77,0,6,6,49,0,202,86,21,0,201,168,115,0,123,226,96,
      0,107,140,192,0,0,224,130,128,128,0,7,108,105,110,107,105,110,103,2,8,158,130,128,128,0,13,0,32,2,15,95,115,101,110,100,69,118,101,110,116,95,114,97,116,101,1,2,12,46,76,95,102,114,101,113,117,101,110,
      99,121,0,0,8,0,32,3,16,95,115,101,110,100,69,118,101,110,116,95,100,101,112,116,104,0,32,4,15,95,115,101,116,86,97,108,117,101,95,115,104,97,112,101,0,32,5,16,95,115,101,116,86,97,108,117,101,95,98,121,
      112,97,115,115,0,32,6,10,105,110,105,116,105,97,108,105,115,101,2,16,0,0,2,7,41,46,76,115,116,100,95,95,102,105,108,116,101,114,115,95,95,98,117,116,116,101,114,119,111,114,116,104,95,95,115,101,116,70,
      114,101,113,117,101,110,99,121,0,2,8,81,46,76,115,116,100,95,95,105,110,116,114,105,110,115,105,99,115,95,95,105,110,116,101,114,110,97,108,95,95,109,97,116,104,95,105,109,112,108,101,109,101,110,116,97,
      116,105,111,110,115,95,95,104,101,108,112,101,114,115,95,95,114,101,109,97,105,110,100,101,114,80,105,79,118,101,114,50,76,97,114,103,101,1,2,13,46,76,95,95,99,111,110,115,116,97,110,116,95,1,0,136,2,0,
      16,0,0,16,1,0,32,9,12,97,100,118,97,110,99,101,66,108,111,99,107,5,173,128,128,128,0,2,17,46,98,115,115,46,46,76,95,102,114,101,113,117,101,110,99,121,3,0,21,46,114,111,100,97,116,97,46,46,76,95,95,99,
      111,110,115,116,97,110,116,95,4,0,0,239,128,128,128,0,10,114,101,108,111,99,46,67,79,68,69,5,23,3,21,1,0,3,135,1,1,0,7,139,3,6,7,150,3,6,3,161,3,1,0,3,189,3,1,0,3,213,4,1,0,0,255,5,7,7,232,6,6,7,254,6,
      6,7,137,7,6,0,158,22,8,7,167,29,6,7,195,29,6,7,207,29,6,4,219,29,9,0,0,228,29,10,0,250,30,11,0,140,31,11,0,158,31,11,7,134,55,6,3,144,60,1,0,0,150,60,7,0,154,128,128,128,0,15,116,97,114,103,101,116,95,
      102,101,97,116,117,114,101,115,1,43,7,115,105,109,100,49,50,56,]);
  }

  /** @access private */
  _getWasmBytesNonSIMD()
  {
    return new Uint8Array([0,97,115,109,1,0,0,0,1,169,128,128,128,0,6,96,2,127,125,0,96,3,127,127,127,0,96,4,127,127,127,124,0,96,2,127,124,0,96,7,127,124,124,124,127,127,127,0,96,3,127,127,127,1,127,2,201,
      128,128,128,0,4,3,101,110,118,15,95,95,108,105,110,101,97,114,95,109,101,109,111,114,121,2,0,1,3,101,110,118,15,95,95,115,116,97,99,107,95,112,111,105,110,116,101,114,3,127,1,3,101,110,118,6,109,101,109,
      99,112,121,0,5,3,101,110,118,6,109,101,109,115,101,116,0,5,3,137,128,128,128,0,8,0,0,1,1,2,3,4,1,7,231,128,128,128,0,6,15,95,115,101,110,100,69,118,101,110,116,95,114,97,116,101,0,2,16,95,115,101,110,100,
      69,118,101,110,116,95,100,101,112,116,104,0,3,15,95,115,101,116,86,97,108,117,101,95,115,104,97,112,101,0,4,16,95,115,101,116,86,97,108,117,101,95,98,121,112,97,115,115,0,5,10,105,110,105,116,105,97,108,
      105,115,101,0,6,12,97,100,118,97,110,99,101,66,108,111,99,107,0,9,12,129,128,128,128,0,2,10,199,190,128,128,0,8,46,0,32,0,65,56,106,68,0,0,0,0,0,0,240,63,65,0,43,3,128,128,128,128,0,163,182,32,1,148,34,
      1,56,2,0,32,0,65,240,0,106,32,1,56,2,0,11,238,1,4,1,127,2,125,1,124,3,127,32,0,65,28,106,32,1,67,10,215,35,60,148,34,1,56,2,0,32,0,65,212,0,106,32,1,56,2,0,32,0,65,24,106,34,2,42,2,0,33,3,32,2,32,1,56,
      2,0,32,0,65,208,0,106,34,2,42,2,0,33,4,32,2,32,1,56,2,0,2,64,2,64,65,0,43,3,128,128,128,128,0,34,5,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,5,170,33,2,12,1,11,65,128,128,128,128,120,33,2,11,32,0,65,36,106,
      34,6,40,2,0,33,7,32,6,32,2,65,50,109,34,2,65,1,32,2,65,1,74,27,34,2,54,2,0,32,0,65,220,0,106,34,6,40,2,0,33,8,32,6,32,2,54,2,0,32,0,65,32,106,34,6,32,1,32,3,32,6,42,2,0,32,7,178,148,147,147,32,2,178,34,
      3,149,56,2,0,32,0,65,216,0,106,34,0,32,1,32,4,32,0,42,2,0,32,8,178,148,147,147,32,3,149,56,2,0,11,75,1,1,125,2,64,32,0,65,208,1,106,40,2,0,13,0,32,0,32,0,40,2,0,65,1,106,54,2,0,11,32,1,42,2,0,33,3,32,0,
      32,2,65,1,32,2,27,34,2,54,2,208,1,32,0,65,204,1,106,32,3,32,0,42,2,200,1,147,32,2,178,149,56,2,0,11,16,0,32,0,32,1,45,0,0,65,1,113,58,0,212,1,11,130,4,4,3,127,1,124,2,125,3,126,35,128,128,128,128,0,65,
      48,107,34,4,36,128,128,128,128,0,65,0,32,3,57,3,128,128,128,128,0,32,1,32,1,40,2,0,34,5,65,1,106,34,6,54,2,0,65,0,32,3,57,3,128,128,128,128,0,32,0,65,200,0,106,32,6,54,2,0,32,0,65,56,106,68,0,0,0,0,0,0,
      240,63,32,3,163,34,7,182,34,8,56,2,0,32,0,65,60,106,32,7,68,0,0,0,0,0,0,78,64,163,182,67,0,0,240,66,148,34,9,56,2,0,32,0,65,32,106,66,0,55,2,0,32,0,65,24,106,66,128,128,128,252,131,128,128,192,63,55,2,
      0,32,0,65,192,0,106,32,5,65,201,3,106,172,34,10,66,32,136,32,10,132,66,255,255,255,255,7,131,55,3,0,32,1,32,1,40,2,0,34,5,65,1,106,34,6,54,2,0,65,0,32,3,57,3,128,128,128,128,0,32,0,65,128,1,106,32,6,54,
      2,0,32,0,65,240,0,106,32,8,56,2,0,32,0,65,244,0,106,32,9,56,2,0,32,0,65,216,0,106,66,0,55,2,0,32,0,65,208,0,106,66,128,128,128,252,131,128,128,192,63,55,2,0,32,0,65,172,1,106,65,1,58,0,0,32,0,65,248,0,
      106,32,5,65,201,3,106,172,34,10,66,32,136,32,10,132,66,255,255,255,255,7,131,55,3,0,32,4,65,8,106,65,32,106,34,1,65,0,54,2,0,32,4,65,8,106,65,24,106,66,0,55,3,0,32,4,65,24,106,66,0,55,3,0,32,4,65,16,106,
      34,5,66,0,55,3,0,32,4,66,0,55,3,8,32,4,65,8,106,32,3,16,135,128,128,128,0,32,5,40,2,0,33,5,32,4,65,28,106,41,2,0,33,10,32,4,65,36,106,42,2,0,33,8,32,4,41,3,8,33,11,32,4,41,2,20,33,12,32,0,65,168,1,106,
      32,1,40,2,0,54,2,0,32,0,65,164,1,106,32,8,56,2,0,32,0,65,156,1,106,32,10,55,2,0,32,0,65,148,1,106,32,12,55,2,0,32,0,65,144,1,106,32,5,54,2,0,32,0,65,136,1,106,32,11,55,2,0,32,4,65,48,106,36,128,128,128,
      128,0,11,189,22,6,1,127,2,124,1,126,2,127,4,124,1,127,35,128,128,128,128,0,65,32,107,34,2,36,128,128,128,128,0,2,64,2,64,68,0,0,0,0,0,0,224,63,32,1,163,34,3,32,1,68,184,30,133,235,81,184,222,63,162,34,
      4,68,0,0,0,0,0,0,73,64,32,4,68,0,0,0,0,0,0,73,64,99,27,68,0,0,0,0,0,0,0,0,165,68,24,45,68,84,251,33,25,64,162,162,34,4,189,34,5,66,32,136,167,34,6,65,255,255,255,255,7,113,34,7,65,251,195,164,255,3,75,
      13,0,32,7,65,128,128,128,242,3,73,13,1,65,0,33,6,2,64,32,5,66,128,128,128,128,128,255,255,255,255,0,131,66,129,128,128,128,240,132,229,242,63,84,34,7,13,0,68,24,45,68,84,251,33,233,63,32,4,154,32,4,32,
      5,66,0,83,27,161,68,7,92,20,51,38,166,129,60,160,33,4,32,5,66,63,136,167,33,6,11,32,4,32,4,32,4,32,4,162,34,8,162,34,9,68,99,85,85,85,85,85,213,63,162,32,8,32,9,32,8,32,8,162,34,10,32,10,32,10,32,10,32,
      10,68,115,83,96,219,203,117,243,190,162,68,166,146,55,160,136,126,20,63,160,162,68,1,101,242,242,216,68,67,63,160,162,68,40,3,86,201,34,109,109,63,160,162,68,55,214,6,132,244,100,150,63,160,162,68,122,
      254,16,17,17,17,193,63,160,32,8,32,10,32,10,32,10,32,10,32,10,68,212,122,191,116,112,42,251,62,162,68,233,167,240,50,15,184,18,63,160,162,68,104,16,141,26,247,38,48,63,160,162,68,21,131,224,254,200,219,
      87,63,160,162,68,147,132,110,233,227,38,130,63,160,162,68,254,65,179,27,186,161,171,63,160,162,160,162,68,0,0,0,0,0,0,0,0,160,162,68,0,0,0,0,0,0,0,0,160,160,34,8,160,33,10,2,64,32,7,69,13,0,32,10,33,4,
      12,2,11,68,0,0,0,0,0,0,240,63,32,4,32,8,32,10,32,10,162,32,10,68,0,0,0,0,0,0,240,63,160,163,161,160,34,4,32,4,160,161,34,4,154,32,4,32,6,27,33,4,12,1,11,2,64,32,7,65,255,255,191,255,7,75,13,0,2,64,2,64,
      2,64,32,7,65,250,212,189,128,4,75,13,0,2,64,32,6,65,255,255,63,113,65,251,195,36,71,13,0,2,64,32,7,65,20,118,34,7,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,
      195,160,34,8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,68,49,99,98,26,97,180,208,61,162,34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,17,72,13,0,2,64,32,7,32,4,32,8,68,0,0,96,26,97,180,208,
      61,162,34,10,161,34,11,32,8,68,115,112,3,46,138,25,163,59,162,32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,50,78,13,0,32,11,33,4,12,1,11,32,11,32,8,68,0,0,0,46,138,
      25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,
      33,7,12,4,11,65,128,128,128,128,120,33,7,12,3,11,2,64,32,7,65,252,178,139,128,4,75,13,0,2,64,32,5,66,127,87,13,0,32,4,68,0,0,64,84,251,33,249,191,160,34,4,32,4,68,49,99,98,26,97,180,208,189,160,34,10,161,
      68,49,99,98,26,97,180,208,189,160,33,9,65,1,33,7,12,4,11,32,4,68,0,0,64,84,251,33,249,63,160,34,4,32,4,68,49,99,98,26,97,180,208,61,160,34,10,161,68,49,99,98,26,97,180,208,61,160,33,9,65,127,33,7,12,3,
      11,32,5,66,127,85,13,1,32,4,68,0,0,64,84,251,33,9,64,160,34,4,32,4,68,49,99,98,26,97,180,224,61,160,34,10,161,68,49,99,98,26,97,180,224,61,160,33,9,65,126,33,7,12,2,11,2,64,2,64,2,64,2,64,2,64,32,7,65,
      188,140,241,128,4,73,13,0,32,7,65,251,195,228,137,4,79,13,3,32,7,65,20,118,34,7,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,8,68,0,0,64,84,251,33,
      249,191,162,160,34,4,32,8,68,49,99,98,26,97,180,208,61,162,34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,17,72,13,2,32,7,32,4,32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,68,115,112,
      3,46,138,25,163,59,162,32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,52,136,167,65,255,15,113,107,65,50,78,13,1,32,11,33,4,12,2,11,2,64,2,64,2,64,2,64,32,7,65,189,251,215,128,4,73,13,0,32,7,65,251,
      195,228,128,4,71,13,3,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,68,49,99,98,26,97,180,208,61,162,
      34,9,161,34,10,189,66,128,128,128,128,128,128,128,248,255,0,131,66,255,255,255,255,255,255,255,135,63,86,13,2,32,4,32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,68,115,112,3,46,138,25,163,59,
      162,32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,128,128,128,128,128,128,128,128,255,0,131,66,255,255,255,255,255,255,255,255,60,88,13,1,32,11,33,4,12,2,11,32,7,65,252,178,203,128,4,70,13,6,2,64,
      32,5,66,0,83,13,0,32,4,68,0,0,48,127,124,217,18,192,160,34,4,32,4,68,202,148,147,167,145,14,233,189,160,34,10,161,68,202,148,147,167,145,14,233,189,160,33,9,65,3,33,7,12,9,11,32,4,68,0,0,48,127,124,217,
      18,64,160,34,4,32,4,68,202,148,147,167,145,14,233,61,160,34,10,161,68,202,148,147,167,145,14,233,61,160,33,9,65,125,33,7,12,8,11,32,11,32,8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,
      37,154,131,123,57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,33,7,12,7,11,65,128,128,128,128,120,33,7,12,6,11,
      2,64,32,5,66,0,83,13,0,32,4,68,0,0,64,84,251,33,25,192,160,34,4,32,4,68,49,99,98,26,97,180,240,189,160,34,10,161,68,49,99,98,26,97,180,240,189,160,33,9,65,4,33,7,12,6,11,32,4,68,0,0,64,84,251,33,25,64,
      160,34,4,32,4,68,49,99,98,26,97,180,240,61,160,34,10,161,68,49,99,98,26,97,180,240,61,160,33,9,65,124,33,7,12,5,11,32,11,32,8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,
      57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,4,32,10,161,32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,33,7,12,4,11,65,128,128,128,128,120,33,7,12,3,11,2,64,2,64,32,
      5,66,255,255,255,255,255,255,255,7,131,66,128,128,128,128,128,128,128,176,193,0,132,191,34,4,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,4,170,33,6,12,1,11,65,128,128,128,128,120,33,6,11,2,64,2,64,32,4,32,
      6,183,34,10,161,68,0,0,0,0,0,0,112,65,162,34,4,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,4,170,33,12,12,1,11,65,128,128,128,128,120,33,12,11,32,2,65,8,106,32,10,32,12,183,34,8,32,4,32,8,161,68,0,0,0,0,0,
      0,112,65,162,34,4,32,7,65,20,118,65,234,119,106,65,3,65,2,32,6,65,0,71,32,12,27,32,4,68,0,0,0,0,0,0,0,0,100,32,4,68,0,0,0,0,0,0,0,0,99,114,27,65,1,16,136,128,128,128,0,32,2,43,3,24,33,9,32,2,43,3,16,33,
      10,32,2,40,2,8,33,7,32,5,66,127,85,13,2,65,0,32,7,107,33,7,32,9,154,33,9,32,10,154,33,10,12,2,11,2,64,32,4,32,4,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,
      8,68,0,0,64,84,251,33,249,191,162,160,34,4,32,8,68,49,99,98,26,97,180,208,61,162,34,9,161,34,10,189,66,128,128,128,128,128,128,128,248,255,0,131,66,255,255,255,255,255,255,255,135,63,86,13,0,2,64,32,4,
      32,8,68,0,0,96,26,97,180,208,61,162,34,10,161,34,11,32,8,68,115,112,3,46,138,25,163,59,162,32,4,32,11,161,32,10,161,161,34,9,161,34,10,189,66,128,128,128,128,128,128,128,128,255,0,131,66,255,255,255,255,
      255,255,255,255,60,88,13,0,32,11,33,4,12,1,11,32,11,32,8,68,0,0,0,46,138,25,163,59,162,34,10,161,34,4,32,8,68,193,73,32,37,154,131,123,57,162,32,11,32,4,161,32,10,161,161,34,9,161,33,10,11,32,4,32,10,161,
      32,9,161,33,9,2,64,32,8,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,8,170,33,7,12,2,11,65,128,128,128,128,120,33,7,12,1,11,32,4,68,0,0,64,84,251,33,9,192,160,34,4,32,4,68,49,99,98,26,97,180,224,189,160,34,
      10,161,68,49,99,98,26,97,180,224,189,160,33,9,65,2,33,7,11,65,0,33,12,2,64,32,10,189,34,5,66,128,128,128,128,128,255,255,255,255,0,131,66,129,128,128,128,240,132,229,242,63,84,34,6,13,0,68,24,45,68,84,
      251,33,233,63,32,10,154,32,10,32,5,66,0,83,34,12,27,161,68,7,92,20,51,38,166,129,60,32,9,154,32,9,32,12,27,161,160,33,10,32,5,66,63,136,167,33,12,68,0,0,0,0,0,0,0,0,33,9,11,32,7,65,1,113,33,7,32,10,32,
      10,32,10,32,10,162,34,8,162,34,11,68,99,85,85,85,85,85,213,63,162,32,9,32,8,32,9,32,11,32,8,32,8,162,34,4,32,4,32,4,32,4,32,4,68,115,83,96,219,203,117,243,190,162,68,166,146,55,160,136,126,20,63,160,162,
      68,1,101,242,242,216,68,67,63,160,162,68,40,3,86,201,34,109,109,63,160,162,68,55,214,6,132,244,100,150,63,160,162,68,122,254,16,17,17,17,193,63,160,32,8,32,4,32,4,32,4,32,4,32,4,68,212,122,191,116,112,
      42,251,62,162,68,233,167,240,50,15,184,18,63,160,162,68,104,16,141,26,247,38,48,63,160,162,68,21,131,224,254,200,219,87,63,160,162,68,147,132,110,233,227,38,130,63,160,162,68,254,65,179,27,186,161,171,
      63,160,162,160,162,160,162,160,160,34,8,160,33,4,2,64,32,6,13,0,65,1,32,7,65,1,116,107,183,34,9,32,10,32,8,32,4,32,4,162,32,4,32,9,160,163,161,160,34,4,32,4,160,161,34,4,154,32,4,32,12,27,33,4,12,2,11,
      32,7,69,13,1,68,0,0,0,0,0,0,240,191,32,4,163,34,9,32,4,189,66,128,128,128,128,112,131,191,34,11,32,9,189,66,128,128,128,128,112,131,191,34,4,162,68,0,0,0,0,0,0,240,63,160,32,8,32,11,32,10,161,161,32,4,
      162,160,162,32,4,160,33,4,12,1,11,32,4,32,4,161,33,4,11,32,0,65,16,106,32,3,32,1,32,1,160,32,4,162,162,34,4,182,56,2,0,32,0,65,20,106,32,4,68,205,59,127,102,158,160,246,63,160,182,56,2,0,32,0,68,0,0,0,
      0,0,0,240,63,32,4,32,4,162,32,4,68,205,59,127,102,158,160,246,63,162,68,0,0,0,0,0,0,240,63,160,160,163,182,56,2,12,32,2,65,32,106,36,128,128,128,128,0,11,240,25,7,10,127,1,124,3,127,1,124,10,127,1,124,
      3,127,35,128,128,128,128,0,65,192,6,107,34,7,36,128,128,128,128,0,32,7,65,184,4,106,65,144,128,128,128,0,65,136,2,16,128,128,128,128,0,26,32,7,66,128,128,128,128,208,227,252,180,53,55,3,176,4,32,7,66,128,
      128,128,128,168,196,224,241,54,55,3,168,4,32,7,66,128,128,128,128,132,164,137,189,56,55,3,160,4,32,7,66,128,128,128,128,184,240,134,248,57,55,3,152,4,32,7,66,128,128,128,128,150,138,179,188,59,55,3,144,
      4,32,7,66,128,128,128,128,136,211,145,252,60,55,3,136,4,32,7,66,128,128,128,128,208,133,145,186,62,55,3,128,4,32,7,66,128,128,128,128,180,191,200,252,63,55,3,248,3,65,0,33,8,32,7,65,248,2,106,65,0,65,128,
      1,16,129,128,128,128,0,26,32,7,65,248,1,106,65,0,65,128,1,16,129,128,128,128,0,26,32,7,65,248,0,106,65,0,65,128,1,16,129,128,128,128,0,26,32,4,65,125,106,65,24,109,34,9,65,0,32,9,65,0,74,27,34,10,65,104,
      108,32,4,106,33,11,2,64,32,6,65,3,106,34,12,32,5,65,127,106,34,13,106,34,14,65,0,72,13,0,32,10,65,2,116,32,5,65,2,116,107,32,7,65,184,4,106,106,65,4,106,33,9,32,10,32,13,107,34,15,33,4,3,64,32,4,65,194,
      0,110,33,16,2,64,2,64,32,15,32,8,106,65,127,74,13,0,68,0,0,0,0,0,0,0,0,33,17,12,1,11,32,9,32,16,65,248,125,108,106,40,2,0,183,33,17,11,32,7,65,248,2,106,32,8,65,15,113,65,3,116,106,32,17,57,3,0,32,9,65,
      4,106,33,9,32,4,65,1,106,33,4,32,8,65,1,106,34,8,32,14,76,13,0,11,11,32,11,65,104,106,33,18,2,64,32,12,65,127,76,13,0,65,0,33,8,2,64,32,5,65,0,74,13,0,3,64,32,7,65,248,0,106,32,8,65,15,113,65,3,116,106,
      66,0,55,3,0,32,8,65,1,106,34,8,32,12,76,13,0,12,2,11,11,65,0,33,16,3,64,68,0,0,0,0,0,0,0,0,33,17,32,7,65,224,0,106,33,8,32,13,33,4,65,0,33,9,3,64,32,7,32,3,57,3,112,32,7,32,2,57,3,104,32,7,32,1,57,3,96,
      32,17,32,8,32,9,65,3,110,65,104,108,106,43,3,0,32,7,65,248,2,106,32,16,32,4,106,65,15,113,65,3,116,106,43,3,0,162,160,33,17,32,8,65,8,106,33,8,32,9,65,1,106,33,9,32,4,65,127,106,34,4,65,127,71,13,0,11,
      32,7,65,248,0,106,32,16,65,15,113,65,3,116,106,32,17,57,3,0,32,16,65,1,106,34,16,32,12,76,13,0,11,11,32,7,65,216,0,106,66,0,55,3,0,32,7,65,32,106,65,48,106,66,0,55,3,0,32,7,65,200,0,106,66,0,55,3,0,32,
      7,65,192,0,106,66,0,55,3,0,32,7,65,56,106,66,0,55,3,0,32,7,65,48,106,66,0,55,3,0,32,7,65,32,106,65,8,106,66,0,55,3,0,32,7,66,0,55,3,32,32,18,32,11,65,177,7,106,34,19,32,18,65,129,120,74,34,8,27,33,20,68,
      0,0,0,0,0,0,240,63,68,0,0,0,0,0,0,96,3,32,8,27,33,21,32,6,65,2,106,33,22,65,47,32,11,107,33,23,65,48,32,11,107,33,24,32,18,65,128,8,72,33,25,32,11,65,233,119,106,34,26,65,255,7,75,33,27,32,11,65,103,106,
      33,28,32,18,65,184,112,74,33,29,32,18,65,130,120,72,33,30,32,12,33,14,2,64,3,64,32,7,65,248,0,106,32,14,34,16,65,15,113,34,31,65,3,116,106,43,3,0,33,17,2,64,32,16,65,1,72,34,15,13,0,32,16,65,15,106,33,
      8,65,0,33,4,3,64,32,4,65,15,113,65,2,116,33,9,2,64,2,64,32,17,68,0,0,0,0,0,0,112,62,162,34,32,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,32,170,33,14,12,1,11,65,128,128,128,128,120,33,14,11,32,7,65,32,106,
      32,9,106,33,9,2,64,2,64,32,17,32,14,183,34,32,68,0,0,0,0,0,0,112,193,162,160,34,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,14,12,1,11,65,128,128,128,128,120,33,14,11,32,9,32,14,54,2,0,32,7,65,
      248,0,106,32,8,65,15,113,65,3,116,106,43,3,0,32,32,160,33,17,32,4,65,1,106,33,4,32,8,65,127,106,34,8,65,15,71,13,0,11,11,2,64,2,64,2,64,2,64,32,25,13,0,32,17,68,0,0,0,0,0,0,224,127,162,33,17,32,27,13,1,
      32,26,33,8,12,3,11,32,30,13,1,32,18,33,8,12,2,11,32,17,68,0,0,0,0,0,0,224,127,162,33,17,32,18,65,253,23,32,18,65,253,23,72,27,65,130,112,106,33,8,12,1,11,32,17,68,0,0,0,0,0,0,96,3,162,33,17,2,64,32,18,
      65,184,112,77,13,0,32,19,33,8,12,1,11,32,17,68,0,0,0,0,0,0,96,3,162,33,17,32,18,65,240,104,32,18,65,240,104,74,27,65,146,15,106,33,8,11,2,64,2,64,32,17,32,8,65,255,7,106,173,66,52,134,191,162,34,17,32,
      17,68,0,0,0,0,0,0,192,63,162,156,68,0,0,0,0,0,0,32,192,162,160,34,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,13,12,1,11,65,128,128,128,128,120,33,13,11,32,17,32,13,183,161,33,17,2,64,2,64,2,64,
      2,64,2,64,32,18,65,1,72,34,33,13,0,32,7,65,32,106,32,16,65,127,106,65,15,113,65,2,116,106,34,8,32,8,40,2,0,34,8,32,8,32,24,117,34,8,32,24,116,107,34,4,54,2,0,32,4,32,23,117,33,34,32,8,32,13,106,33,13,12,
      1,11,2,64,32,18,13,0,32,7,65,32,106,32,16,65,127,106,65,15,113,65,2,116,106,40,2,0,65,23,117,33,34,12,1,11,65,2,33,34,65,0,33,35,32,17,68,0,0,0,0,0,0,224,63,102,69,13,3,12,1,11,32,34,65,0,76,13,1,11,2,
      64,2,64,32,15,69,13,0,65,0,33,14,12,1,11,65,0,33,8,65,0,33,14,3,64,32,7,65,32,106,32,8,65,15,113,65,2,116,106,34,15,40,2,0,33,4,65,255,255,255,7,33,9,2,64,2,64,32,14,65,1,113,13,0,65,128,128,128,8,33,9,
      32,4,13,0,65,0,33,14,12,1,11,32,15,32,9,32,4,107,54,2,0,65,1,33,14,11,32,16,32,8,65,1,106,34,8,71,13,0,11,11,2,64,32,33,13,0,65,255,255,255,3,33,8,2,64,2,64,32,28,14,2,1,0,2,11,65,255,255,255,1,33,8,11,
      32,7,65,32,106,32,16,65,127,106,65,15,113,65,2,116,106,34,4,32,4,40,2,0,32,8,113,54,2,0,11,32,13,65,1,106,33,13,32,34,65,2,71,13,0,68,0,0,0,0,0,0,240,63,32,17,161,33,17,65,2,33,35,32,14,69,13,1,2,64,2,
      64,32,25,13,0,68,0,0,0,0,0,0,224,127,33,32,32,26,33,8,32,27,69,13,1,32,18,65,253,23,32,18,65,253,23,72,27,65,130,112,106,33,8,68,0,0,0,0,0,0,240,127,33,32,12,1,11,32,21,33,32,32,20,33,8,32,29,13,0,32,18,
      65,240,104,32,18,65,240,104,74,27,65,146,15,106,33,8,68,0,0,0,0,0,0,0,0,33,32,11,32,17,32,32,32,8,65,255,7,106,173,66,52,134,191,162,161,33,17,12,1,11,32,34,33,35,11,2,64,32,17,68,0,0,0,0,0,0,0,0,98,13,
      0,2,64,32,16,65,127,106,34,8,32,12,72,13,0,65,0,33,4,3,64,32,7,65,32,106,32,8,65,15,113,65,2,116,106,40,2,0,32,4,114,33,4,32,8,65,127,106,34,8,32,12,78,13,0,11,32,4,69,13,0,32,18,33,11,3,64,32,11,65,104,
      106,33,11,32,7,65,32,106,32,16,65,127,106,34,16,65,15,113,65,2,116,106,40,2,0,69,13,0,12,4,11,11,32,22,33,8,32,16,33,14,3,64,32,14,65,1,106,33,14,32,8,65,15,113,33,4,32,8,65,127,106,33,8,32,7,65,32,106,
      32,4,65,2,116,106,40,2,0,69,13,0,11,32,16,65,1,106,34,15,32,14,74,13,1,3,64,32,7,65,248,2,106,32,16,32,5,106,65,15,113,65,3,116,106,32,7,65,184,4,106,32,15,32,10,106,65,194,0,111,34,8,65,194,0,106,32,8,
      32,8,65,0,72,27,65,2,116,106,40,2,0,183,57,3,0,68,0,0,0,0,0,0,0,0,33,17,2,64,32,5,65,1,72,13,0,65,0,33,8,32,7,65,8,106,33,4,32,5,33,9,3,64,32,7,32,3,57,3,24,32,7,32,2,57,3,16,32,7,32,1,57,3,8,32,17,32,
      4,32,8,65,3,110,65,104,108,106,43,3,0,32,7,65,248,2,106,32,16,32,9,106,65,15,113,65,3,116,106,43,3,0,162,160,33,17,32,4,65,8,106,33,4,32,8,65,1,106,33,8,32,9,65,127,106,34,9,13,0,11,11,32,7,65,248,0,106,
      32,15,65,15,113,65,3,116,106,32,17,57,3,0,32,16,65,1,106,33,16,32,15,65,1,106,34,15,32,14,74,13,2,12,0,11,11,11,2,64,2,64,2,64,65,24,32,11,107,34,8,65,128,8,72,13,0,32,17,68,0,0,0,0,0,0,224,127,162,33,
      17,65,153,120,32,11,107,34,4,65,255,7,75,13,1,32,4,33,8,12,2,11,32,8,65,130,120,78,13,1,32,17,68,0,0,0,0,0,0,96,3,162,33,17,2,64,32,8,65,184,112,77,13,0,65,225,7,32,11,107,33,8,12,2,11,32,17,68,0,0,0,0,
      0,0,96,3,162,33,17,32,8,65,240,104,32,8,65,240,104,74,27,65,146,15,106,33,8,12,1,11,32,17,68,0,0,0,0,0,0,224,127,162,33,17,32,8,65,253,23,32,8,65,253,23,72,27,65,130,112,106,33,8,11,2,64,2,64,32,17,32,
      8,65,255,7,106,173,66,52,134,191,162,34,17,68,0,0,0,0,0,0,112,65,102,69,13,0,32,31,65,2,116,33,4,2,64,2,64,32,17,68,0,0,0,0,0,0,112,62,162,34,3,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,3,170,33,8,12,1,11,
      65,128,128,128,128,120,33,8,11,32,7,65,32,106,32,4,106,33,4,2,64,2,64,32,17,32,8,183,68,0,0,0,0,0,0,112,193,162,160,34,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,9,12,1,11,65,128,128,128,128,
      120,33,9,11,32,4,32,9,54,2,0,32,16,65,1,106,34,16,65,15,113,33,31,12,1,11,2,64,2,64,32,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,8,12,1,11,65,128,128,128,128,120,33,8,11,32,18,33,11,11,32,7,
      65,32,106,32,31,65,2,116,106,32,8,54,2,0,11,2,64,2,64,32,11,65,128,8,72,13,0,68,0,0,0,0,0,0,224,127,33,17,32,11,65,129,120,106,34,8,65,255,7,77,13,1,32,11,65,253,23,32,11,65,253,23,72,27,65,130,112,106,
      33,8,68,0,0,0,0,0,0,240,127,33,17,12,1,11,68,0,0,0,0,0,0,240,63,33,17,2,64,32,11,65,130,120,72,13,0,32,11,33,8,12,1,11,2,64,32,11,65,184,112,77,13,0,32,11,65,201,7,106,33,8,68,0,0,0,0,0,0,96,3,33,17,12,
      1,11,32,11,65,240,104,32,11,65,240,104,74,27,65,146,15,106,33,8,68,0,0,0,0,0,0,0,0,33,17,11,68,0,0,0,0,0,0,0,0,33,2,68,0,0,0,0,0,0,0,0,33,3,2,64,32,16,65,0,72,13,0,32,17,32,8,65,255,7,106,173,66,52,134,
      191,162,33,17,32,16,33,8,3,64,32,7,65,248,0,106,32,8,65,15,113,34,4,65,3,116,106,32,17,32,7,65,32,106,32,4,65,2,116,106,40,2,0,183,162,57,3,0,32,17,68,0,0,0,0,0,0,112,62,162,33,17,32,8,65,127,106,34,8,
      65,127,71,13,0,11,68,0,0,0,0,0,0,0,0,33,3,32,16,65,0,72,13,0,2,64,2,64,32,12,65,127,76,13,0,32,16,33,8,3,64,2,64,2,64,32,16,32,8,34,4,107,34,9,65,0,78,13,0,68,0,0,0,0,0,0,0,0,33,17,12,1,11,68,0,0,0,0,0,
      0,0,0,33,17,65,0,33,8,3,64,32,17,32,7,65,248,3,106,32,8,65,7,113,65,3,116,106,43,3,0,32,7,65,248,0,106,32,4,32,8,106,65,15,113,65,3,116,106,43,3,0,162,160,33,17,32,8,65,1,106,34,8,32,12,74,13,1,32,8,32,
      9,76,13,0,11,11,32,7,65,248,1,106,32,9,65,15,113,65,3,116,106,32,17,57,3,0,32,4,65,127,106,33,8,32,4,65,0,74,13,0,12,2,11,11,32,16,65,1,106,33,4,65,0,33,8,3,64,32,7,65,248,1,106,32,8,65,15,113,65,3,116,
      106,66,0,55,3,0,32,4,32,8,65,1,106,34,8,71,13,0,11,11,68,0,0,0,0,0,0,0,0,33,3,32,16,65,0,72,13,0,68,0,0,0,0,0,0,0,0,33,3,32,16,33,8,3,64,32,3,32,7,65,248,1,106,32,8,65,15,113,65,3,116,106,43,3,0,160,33,
      3,32,8,65,127,106,34,8,65,127,71,13,0,11,11,2,64,32,6,69,13,0,32,7,43,3,248,1,32,3,161,33,17,2,64,32,16,65,1,72,13,0,65,1,33,8,3,64,32,17,32,7,65,248,1,106,32,8,65,15,113,65,3,116,106,43,3,0,160,33,17,
      32,8,65,1,106,34,8,32,16,76,13,0,11,11,32,17,154,32,17,32,35,27,33,2,11,32,0,32,2,57,3,16,32,0,32,13,65,7,113,54,2,0,32,0,32,3,154,32,3,32,35,27,57,3,8,32,7,65,192,6,106,36,128,128,128,128,0,11,147,7,2,
      2,127,7,125,2,64,32,0,40,2,4,32,2,70,13,0,32,0,65,136,1,106,33,3,3,64,2,64,32,0,40,2,0,69,13,0,2,64,32,0,40,2,208,1,69,13,0,32,0,32,0,42,2,200,1,32,0,42,2,204,1,146,56,2,200,1,32,0,32,0,40,2,208,1,65,127,
      106,34,4,54,2,208,1,32,4,13,0,32,0,32,0,40,2,0,65,127,106,54,2,0,11,32,0,32,0,42,2,200,1,56,2,192,1,11,32,0,32,0,45,0,212,1,65,1,113,58,0,196,1,32,1,32,0,40,2,4,65,2,116,106,42,2,0,33,5,32,0,32,0,42,2,
      192,1,56,2,184,1,67,0,0,0,0,33,6,67,0,0,0,0,33,7,2,64,32,0,40,2,76,65,127,70,13,0,2,64,2,64,32,0,40,2,36,34,4,65,1,72,13,0,32,0,32,4,65,127,106,34,4,54,2,36,32,0,42,2,24,32,0,42,2,32,32,4,178,148,147,33,
      7,12,1,11,32,0,42,2,24,33,7,11,32,7,67,0,0,128,64,148,32,0,42,2,48,34,8,148,33,9,2,64,2,64,32,8,67,0,0,0,63,94,69,13,0,32,7,67,0,0,64,64,148,67,0,0,0,0,146,32,9,147,33,7,12,1,11,67,0,0,0,0,32,7,147,32,
      9,146,33,7,11,2,64,32,8,32,0,42,2,56,146,34,8,67,0,0,128,63,96,69,13,0,3,64,32,8,67,0,0,128,191,146,34,8,67,0,0,128,63,96,13,0,11,11,32,7,67,0,0,0,0,146,33,7,32,0,65,1,54,2,76,32,0,32,8,56,2,48,11,2,64,
      32,0,40,2,132,1,65,127,70,13,0,2,64,2,64,32,0,40,2,92,34,4,65,1,72,13,0,32,0,32,4,65,127,106,34,4,54,2,92,32,0,42,2,80,32,0,42,2,88,32,4,178,148,147,33,8,12,1,11,32,0,42,2,80,33,8,11,32,8,140,32,8,32,0,
      42,2,104,34,6,67,0,0,0,63,94,27,33,9,2,64,32,6,32,0,42,2,112,146,34,8,67,0,0,128,63,96,69,13,0,3,64,32,8,67,0,0,128,191,146,34,8,67,0,0,128,63,96,13,0,11,11,32,9,67,0,0,0,0,146,33,6,32,0,65,1,54,2,132,
      1,32,0,32,8,56,2,104,11,67,0,0,0,0,33,8,2,64,32,0,40,2,180,1,34,4,65,127,70,13,0,32,6,32,0,42,2,184,1,148,67,10,215,35,60,148,67,0,0,0,0,146,33,8,2,64,2,64,32,4,65,0,76,13,0,32,0,32,0,40,2,176,1,65,127,
      106,34,4,54,2,176,1,32,4,65,0,78,13,1,11,2,64,32,0,45,0,172,1,69,13,0,32,0,65,0,54,2,168,1,32,3,65,0,43,3,128,128,128,128,0,16,135,128,128,128,0,32,0,65,0,58,0,172,1,11,32,0,65,31,54,2,176,1,11,32,0,32,
      0,42,2,152,1,34,9,32,0,42,2,148,1,32,8,32,0,42,2,156,1,32,0,42,2,160,1,34,6,148,147,32,0,42,2,164,1,34,10,147,148,34,8,148,34,11,32,6,32,11,146,34,6,146,56,2,160,1,32,0,32,9,32,6,148,34,9,32,10,32,9,146,
      34,9,146,56,2,164,1,2,64,2,64,2,64,32,0,40,2,168,1,14,2,0,2,1,11,32,9,33,8,12,1,11,32,6,33,8,11,32,0,65,1,54,2,180,1,32,8,67,0,0,0,0,146,33,8,11,32,1,32,0,40,2,4,65,2,116,106,65,128,16,106,32,5,67,0,0,
      128,63,32,8,32,7,32,0,42,2,184,1,67,10,215,35,188,148,67,0,0,128,63,146,148,67,0,0,0,0,146,146,67,0,0,0,63,148,67,0,0,0,63,146,32,0,45,0,196,1,27,148,67,0,0,0,0,146,56,2,0,32,0,32,0,40,2,4,65,1,106,34,
      4,54,2,4,32,4,32,2,71,13,0,11,11,32,0,65,0,54,2,4,11,11,156,130,128,128,0,2,0,65,0,11,8,0,0,0,0,0,0,0,0,0,65,16,11,136,2,131,249,162,0,68,78,110,0,252,41,21,0,209,87,39,0,221,52,245,0,98,219,192,0,60,153,
      149,0,65,144,67,0,99,81,254,0,187,222,171,0,183,97,197,0,58,110,36,0,210,77,66,0,73,6,224,0,9,234,46,0,28,146,209,0,235,29,254,0,41,177,28,0,232,62,167,0,245,53,130,0,68,187,46,0,156,233,132,0,180,38,112,
      0,65,126,95,0,214,145,57,0,83,131,57,0,156,244,57,0,139,95,132,0,40,249,189,0,248,31,59,0,222,255,151,0,15,152,5,0,17,47,239,0,10,90,139,0,109,31,109,0,207,126,54,0,9,203,39,0,70,79,183,0,158,102,63,0,
      45,234,95,0,186,39,117,0,229,235,199,0,61,123,241,0,247,57,7,0,146,82,138,0,251,107,234,0,31,177,95,0,8,93,141,0,48,3,86,0,123,252,70,0,240,171,107,0,32,188,207,0,54,244,154,0,227,169,29,0,94,97,145,0,
      8,27,230,0,133,153,101,0,160,20,95,0,141,64,104,0,128,216,255,0,39,115,77,0,6,6,49,0,202,86,21,0,201,168,115,0,123,226,96,0,107,140,192,0,0,224,130,128,128,0,7,108,105,110,107,105,110,103,2,8,158,130,128,
      128,0,13,0,32,2,15,95,115,101,110,100,69,118,101,110,116,95,114,97,116,101,1,2,12,46,76,95,102,114,101,113,117,101,110,99,121,0,0,8,0,32,3,16,95,115,101,110,100,69,118,101,110,116,95,100,101,112,116,104,
      0,32,4,15,95,115,101,116,86,97,108,117,101,95,115,104,97,112,101,0,32,5,16,95,115,101,116,86,97,108,117,101,95,98,121,112,97,115,115,0,32,6,10,105,110,105,116,105,97,108,105,115,101,2,16,0,0,2,7,41,46,
      76,115,116,100,95,95,102,105,108,116,101,114,115,95,95,98,117,116,116,101,114,119,111,114,116,104,95,95,115,101,116,70,114,101,113,117,101,110,99,121,0,2,8,81,46,76,115,116,100,95,95,105,110,116,114,105,
      110,115,105,99,115,95,95,105,110,116,101,114,110,97,108,95,95,109,97,116,104,95,105,109,112,108,101,109,101,110,116,97,116,105,111,110,115,95,95,104,101,108,112,101,114,115,95,95,114,101,109,97,105,110,
      100,101,114,80,105,79,118,101,114,50,76,97,114,103,101,1,2,13,46,76,95,95,99,111,110,115,116,97,110,116,95,1,0,136,2,0,16,0,0,16,1,0,32,9,12,97,100,118,97,110,99,101,66,108,111,99,107,5,173,128,128,128,
      0,2,17,46,98,115,115,46,46,76,95,102,114,101,113,117,101,110,99,121,3,0,21,46,114,111,100,97,116,97,46,46,76,95,95,99,111,110,115,116,97,110,116,95,4,0,0,239,128,128,128,0,10,114,101,108,111,99,46,67,79,
      68,69,5,23,3,21,1,0,3,135,1,1,0,7,137,3,6,7,148,3,6,3,159,3,1,0,3,187,3,1,0,3,211,4,1,0,0,130,6,7,7,251,6,6,7,145,7,6,7,156,7,6,0,177,22,8,7,186,29,6,7,210,29,6,7,222,29,6,4,234,29,9,0,0,243,29,10,0,137,
      31,11,0,155,31,11,0,173,31,11,7,172,55,6,3,182,60,1,0,0,188,60,7,]);
  }
}
