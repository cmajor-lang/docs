//==============================================================================
//
//  This file contains a Javascript/Webassembly/WebAudio export of the Cmajor
//  patch 'HelloWorld.cmajorpatch'.
//
//  This file was auto-generated by the Cmajor toolkit v1.0.2548
//
//  To use it, import this module into your HTML/Javascript code and call
//  `createAudioWorkletNodePatchConnection()`. The AudioWorkletPatchConnection
//  object that is returned is a PatchConnection with some extra functionality
//  to let you connect it to web audio/MIDI.
//
//  For more details about Cmajor, visit https://cmajor.dev
//
//==============================================================================

import * as helpers from "./cmaj_api/cmaj-audio-worklet-helper.js"


//==============================================================================
/** This exports the patch's manifest, in case a caller needs to find out about its properties.
 */
export const manifest =
{
  "CmajorVersion": 1,
  "ID": "dev.cmajor.examples.helloworld",
  "version": "1.0",
  "name": "Hello World",
  "description": "The classic audio Hello World",
  "manufacturer": "Cmajor Software Ltd",
  "category": "generator",
  "isInstrument": false,
  "source": "HelloWorld.cmajor"
};

/** Returns the patch's output endpoint list */
export function getOutputEndpoints() { return HelloWorld.prototype.getOutputEndpoints(); }

/** Returns the patch's input endpoint list */
export function getInputEndpoints()  { return HelloWorld.prototype.getInputEndpoints(); }

//==============================================================================
/**  Creates an audio worklet node for the patch with the given name, attaches it
 *   to the audio context provided, and returns an object containing the node
 *   and a PatchConnection class to control it.
 *
 *   @param {AudioContext} audioContext - a web audio AudioContext object
 *   @param {string} workletName - the name to give the new worklet that is created
 *   @returns {AudioWorkletPatchConnection} an AudioWorkletPatchConnection which has been initialised
 */
export async function createAudioWorkletNodePatchConnection (audioContext, workletName)
{
  const connection = new helpers.AudioWorkletPatchConnection (manifest);

  await connection.initialise ({ CmajorClass: HelloWorld,
                                 audioContext,
                                 workletName,
                                 hostDescription: "WebAudio" });
  return connection;
}

/***********************************************************************************
 *
 *   A Javascript/Webassembly implementation of the Cmajor processor 'HelloWorld'.
 *
 *   This class was auto-generated by the Cmajor toolkit.
 *
 *   To use it, construct an instance of this class, and call `initialise()` to
 *   asynchronously prepare it for use. Once initialised, the class provides
 *   appropriate setter/getter methods for reading/writing data to its endpoints,
 *   and an `advance()` method to render the next block.
 *
 *   This roughly mirrors functionality of the cmajor Performer API - see the
 *   C++ API classes and Cmajor docs for more information about how this is used.
 */
class HelloWorld
{
  /** After constructing one of these objects, call its
   *  initialise() method to prepare it for use.
   */
  constructor()
  {
  }

  //==============================================================================
  /** Prepares this processor for use.
   *
   *  @param {number} sessionID - A unique integer ID which will be used for `processor.session`.
   *  @param {number} frequency - The frequency in Hz that the processor will be expected to run at.
   */
  async initialise (sessionID, frequency)
  {
    if (! ((sessionID ^ 0) > 1))
      throw new Error ("initialise() requires a valid non-zero session ID argument");

    if (! (frequency > 1))
      throw new Error ("initialise() requires a valid frequency argument");

    const isSIMDAvailable = WebAssembly.validate (new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));

    if (isSIMDAvailable)
      await this._initialiseInternalSIMD (sessionID, frequency);
    else
      await this._initialiseInternalNonSIMD (sessionID, frequency);

    return true;
  }

  //==============================================================================
  /** Advances the processor by a number of frames.
   *
   *  Before calling `advance()` you should use the appropriate functions to
   *  push data and events into the processor's input endpoints. After calling
   *  `advance()` you can use its output endpoint access functions to read the
   *  results.
   *
   *  @param {number} numFrames - An integer number of frames to advance.
   *                              This must be greater than zero.
   */
  advance (numFrames)
  {
    this._advanceInternal (numFrames);
  }

  //==============================================================================
  /** Returns an object which encapsulates the state of the patch at this point.
   *  The state can be restored by passing this object to `restoreState()`.
   */
  getState()
  {
    return { memory: this.byteMemory.slice(0) };
  }

  /** Restores the patch to a state that was previously saved by a call to `getState()`
   */
  restoreState (savedState)
  {
    if (savedState?.memory && savedState.memory?.length === this.byteMemory.length)
      this.byteMemory.set (savedState.memory);
    else
      throw Error ("restoreState(): not a valid state object");
  }

  /** Returns a list of the output endpoints that this processor exposes.
   *  @returns {Array}
   */
  getOutputEndpoints()
  {
    return [
      {
        "endpointID": "out",
        "endpointType": "stream",
        "dataType": {
          "type": "float32"
        },
        "purpose": "audio out",
        "numAudioChannels": 1
      }
    ];
  }

  /** Returns a list of the input endpoints that this processor exposes.
   *  @returns {Array}
   */
  getInputEndpoints()
  {
    return [];
  }

  /** Returns a frame from the output stream "out"
   *
   * @param {number} frameIndex - the index of the frame to fetch
   */
  getOutputFrame_out (frameIndex)
  {
    return this._getOutputFrameInternal_out (frameIndex);
  }

  /** Copies frames from the output stream "out" into a destination array.
   *
   * @param {Array} destChannelArrays   - An array of arrays (one per channel) into
   *                                      which the samples will be copied
   * @param {number} maxNumFramesToRead - The maximum number of frames to copy
   * @param {number} destChannel        - The channel to start writing from
   */
  getOutputFrames_out (destChannelArrays, maxNumFramesToRead, destChannel)
  {
    this._getOutputFramesInternal_out (destChannelArrays, maxNumFramesToRead, destChannel);
  }

  //==============================================================================
  // Code beyond this point is private internal implementation detail

  //==============================================================================
  /** @access private */
  async _initialiseInternalSIMD (sessionID, frequency)
  {
    this.stateAddress = 71712;
    this.scratchSpaceAddress = 73808;

    const memory = new WebAssembly.Memory ({ initial: 3 });
    const stack = new WebAssembly.Global ({ value: "i32", mutable: true }, 71712);
    const imports = {
      env: {
        __linear_memory: memory,
        __memory_base: 0,
        __stack_pointer: stack,
        __table_base: 0,
        memcpy:  (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memmove: (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memset:  (dst, value, len) => { this.byteMemory.fill (value, dst, dst + len); return dst; }
      },
    };

    const result = await WebAssembly.instantiate (this._getWasmBytesSIMD(), imports);
    this.instance = result.instance;
    const exports = this.instance.exports;
    const memoryBuffer = exports.memory?.buffer || memory.buffer;
    const memoryDataView = new DataView (memoryBuffer);
    const byteMemory = new Uint8Array (memoryBuffer);
    this.byteMemory = byteMemory;
    this.memoryDataView = memoryDataView;

    exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);

    const advanceFn = exports.advanceBlock ? ((numFrames) => exports.advanceBlock (71712, 71760, numFrames))
                                           : (() => exports.advanceOneFrame (71712, 71760));

    this.reset = () => {
       byteMemory.fill (0, 71712, 71760);
       byteMemory.fill (0, 73808, 73808 + 4);
       exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);
    };

    this._advanceInternal = (numFrames) => {
      byteMemory.fill (0, 71760, 71760 + numFrames * 4);
      advanceFn (numFrames);
    };

    this._getOutputFrameInternal_out = (frameIndex) => { return memoryDataView.getFloat32 (71760 + frameIndex * 4, true); };

    this._getOutputFramesInternal_out = (destChannelArrays, maxNumFramesToRead, destChannel) => {
      if (maxNumFramesToRead > 512)
        maxNumFramesToRead = 512;

      const channelsToCopy = Math.min (1, destChannelArrays.length - destChannel);
      let source = 71760;

      for (let frame = 0; frame < maxNumFramesToRead; ++frame)
      {
        for (let channel = 0; channel < channelsToCopy; ++channel)
          destChannelArrays[destChannel + channel][frame] = memoryDataView.getFloat32 (source + 4 * channel, true);

        source += 4;
      }
    };
  }

  //==============================================================================
  /** @access private */
  async _initialiseInternalNonSIMD (sessionID, frequency)
  {
    this.stateAddress = 71696;
    this.scratchSpaceAddress = 73792;

    const memory = new WebAssembly.Memory ({ initial: 3 });
    const stack = new WebAssembly.Global ({ value: "i32", mutable: true }, 71696);
    const imports = {
      env: {
        __linear_memory: memory,
        __memory_base: 0,
        __stack_pointer: stack,
        __table_base: 0,
        memcpy:  (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memmove: (dst, src, len) => { this.byteMemory.copyWithin (dst, src, src + len); return dst; },
        memset:  (dst, value, len) => { this.byteMemory.fill (value, dst, dst + len); return dst; }
      },
    };

    const result = await WebAssembly.instantiate (this._getWasmBytesNonSIMD(), imports);
    this.instance = result.instance;
    const exports = this.instance.exports;
    const memoryBuffer = exports.memory?.buffer || memory.buffer;
    const memoryDataView = new DataView (memoryBuffer);
    const byteMemory = new Uint8Array (memoryBuffer);
    this.byteMemory = byteMemory;
    this.memoryDataView = memoryDataView;

    exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);

    const advanceFn = exports.advanceBlock ? ((numFrames) => exports.advanceBlock (71696, 71744, numFrames))
                                           : (() => exports.advanceOneFrame (71696, 71744));

    this.reset = () => {
       byteMemory.fill (0, 71696, 71744);
       byteMemory.fill (0, 73792, 73792 + 4);
       exports.initialise?.(this.stateAddress, this.scratchSpaceAddress, sessionID, frequency);
    };

    this._advanceInternal = (numFrames) => {
      byteMemory.fill (0, 71744, 71744 + numFrames * 4);
      advanceFn (numFrames);
    };

    this._getOutputFrameInternal_out = (frameIndex) => { return memoryDataView.getFloat32 (71744 + frameIndex * 4, true); };

    this._getOutputFramesInternal_out = (destChannelArrays, maxNumFramesToRead, destChannel) => {
      if (maxNumFramesToRead > 512)
        maxNumFramesToRead = 512;

      const channelsToCopy = Math.min (1, destChannelArrays.length - destChannel);
      let source = 71744;

      for (let frame = 0; frame < maxNumFramesToRead; ++frame)
      {
        for (let channel = 0; channel < channelsToCopy; ++channel)
          destChannelArrays[destChannel + channel][frame] = memoryDataView.getFloat32 (source + 4 * channel, true);

        source += 4;
      }
    };
  }

  /** @access private */
  _getWasmBytesSIMD()
  {
    return new Uint8Array([0,97,115,109,1,0,0,0,1,154,128,128,128,0,4,96,4,127,127,127,124,0,96,3,127,127,127,0,96,3,127,127,127,1,127,96,1,125,1,125,2,201,128,128,128,0,4,3,101,110,118,15,95,95,108,105,110,
      101,97,114,95,109,101,109,111,114,121,2,0,1,3,101,110,118,15,95,95,115,116,97,99,107,95,112,111,105,110,116,101,114,3,127,1,3,101,110,118,6,109,101,109,99,112,121,0,2,3,101,110,118,6,109,101,109,115,101,
      116,0,2,3,132,128,128,128,0,3,0,1,3,7,157,128,128,128,0,2,10,105,110,105,116,105,97,108,105,115,101,0,2,12,97,100,118,97,110,99,101,66,108,111,99,107,0,3,12,129,128,128,128,0,3,10,242,168,128,128,0,3,64,
      0,65,0,32,3,57,3,128,128,128,128,0,2,64,32,3,68,0,0,0,0,0,0,28,64,163,34,3,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,0,32,3,170,54,2,8,15,11,32,0,65,128,128,128,128,120,54,2,8,11,144,37,13,3,127,1,125,3,
      127,1,125,1,127,2,125,3,127,3,124,1,127,1,123,5,127,1,124,4,127,35,128,128,128,128,0,65,144,6,107,34,3,36,128,128,128,128,0,2,64,32,0,40,2,0,32,2,70,13,0,32,3,65,24,106,33,4,32,3,65,40,106,33,5,3,64,67,
      0,0,0,0,33,6,2,64,32,0,40,2,44,34,7,65,127,70,13,0,65,0,33,8,2,64,2,64,32,7,65,0,74,13,0,65,0,33,9,12,1,11,65,1,33,9,11,2,64,2,64,2,64,2,64,2,64,2,64,2,64,3,64,2,64,2,64,32,9,14,2,0,1,1,11,32,0,32,8,54,
      2,32,65,1,33,9,12,1,11,2,64,2,64,32,7,65,1,72,13,0,32,0,40,2,40,33,9,65,0,33,7,12,1,11,2,64,32,0,40,2,32,34,9,65,12,76,13,0,65,127,33,9,67,0,0,0,0,33,6,12,9,11,32,0,40,2,8,32,9,65,3,116,34,8,65,148,128,
      128,128,0,106,40,2,0,108,33,9,67,0,0,128,63,33,6,2,64,32,8,65,144,128,128,128,0,106,40,2,0,65,187,127,106,178,67,171,170,170,61,148,34,10,188,34,11,65,255,255,255,255,7,113,34,8,69,13,0,2,64,32,8,65,129,
      128,128,252,7,73,13,0,32,10,67,0,0,0,64,146,33,6,12,1,11,2,64,2,64,32,8,65,128,128,128,252,3,70,13,0,32,8,65,128,128,128,252,7,71,13,1,32,10,67,0,0,0,0,32,11,65,127,74,27,33,6,12,2,11,67,0,0,0,64,67,0,
      0,0,63,32,11,65,127,74,27,33,6,12,1,11,2,64,32,11,65,128,128,128,248,3,71,13,0,67,243,4,181,63,33,6,12,1,11,67,0,0,128,64,33,6,32,11,65,128,128,128,128,4,70,13,0,2,64,32,8,65,129,128,128,232,4,73,13,0,
      67,0,0,128,127,67,0,0,0,0,32,11,65,0,74,27,33,6,12,1,11,67,0,0,128,127,33,6,32,10,67,0,0,0,0,148,32,10,32,11,65,128,96,113,190,34,12,147,146,34,10,32,12,146,34,13,188,34,8,65,128,128,128,152,4,74,13,0,
      2,64,2,64,2,64,32,8,65,128,128,128,152,4,71,13,0,65,128,128,128,152,4,33,14,32,10,67,60,170,56,51,146,32,13,32,12,147,94,69,13,1,12,3,11,67,0,0,0,0,33,6,32,8,65,255,255,255,255,7,113,34,14,65,128,128,216,
      152,4,75,13,2,2,64,32,8,65,128,128,216,152,124,71,13,0,32,10,32,13,32,12,147,95,13,3,11,65,0,33,11,32,14,65,128,128,128,248,3,77,13,1,11,65,0,65,128,128,128,4,32,14,65,23,118,65,130,127,106,118,32,8,106,
      34,14,65,255,255,255,3,113,65,128,128,128,4,114,65,150,1,32,14,65,23,118,65,255,1,113,34,15,107,118,34,11,107,32,11,32,8,65,0,72,27,33,11,32,10,32,12,65,128,128,128,124,32,15,65,129,127,106,117,32,14,113,
      190,147,34,12,146,188,33,8,11,2,64,2,64,2,64,32,11,65,23,116,32,8,65,128,128,126,113,190,34,6,67,0,114,49,63,148,34,13,32,6,67,140,190,191,53,148,32,10,32,6,32,12,147,147,67,24,114,49,63,148,146,34,12,
      146,34,6,32,6,32,6,32,6,32,6,148,34,10,32,10,32,10,32,10,32,10,67,76,187,49,51,148,67,14,234,221,181,146,148,67,85,179,138,56,146,148,67,97,11,54,187,146,148,67,171,170,42,62,146,148,147,34,10,148,32,10,
      67,0,0,0,192,146,149,32,12,32,6,32,13,147,147,34,10,32,6,32,10,148,146,147,147,67,0,0,128,63,146,34,6,188,106,34,8,65,255,255,255,3,74,13,0,2,64,32,11,65,128,1,72,13,0,32,6,67,0,0,0,127,148,33,6,32,11,
      65,129,127,106,34,8,65,255,0,75,13,2,32,8,33,11,12,3,11,32,11,65,130,127,78,13,2,32,11,65,230,0,106,33,8,32,6,67,0,0,128,12,148,33,6,2,64,32,11,65,155,126,77,13,0,32,8,33,11,12,3,11,32,6,67,0,0,128,12,
      148,33,6,32,11,65,182,125,32,11,65,182,125,74,27,65,204,1,106,33,11,12,2,11,32,8,190,33,6,12,2,11,32,6,67,0,0,0,127,148,33,6,32,11,65,253,2,32,11,65,253,2,72,27,65,130,126,106,33,11,11,32,6,32,11,65,23,
      116,65,128,128,128,252,3,106,190,148,33,6,11,32,0,68,0,0,0,0,0,0,240,63,65,0,43,3,128,128,128,128,0,163,32,6,67,0,0,220,67,148,187,162,68,24,45,68,84,251,33,25,64,162,182,56,2,36,11,32,0,32,9,65,127,106,
      34,9,54,2,40,2,64,2,64,32,9,65,0,72,13,0,2,64,32,0,42,2,12,34,6,188,34,16,65,255,255,255,255,7,113,34,9,65,218,159,164,250,3,75,13,0,32,6,32,6,187,34,17,32,17,162,34,18,32,17,162,34,19,32,18,32,18,162,
      162,32,18,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,249,0,42,191,160,162,32,19,32,18,68,178,251,110,137,16,17,129,63,162,68,119,172,203,84,85,85,197,191,160,162,32,17,160,160,182,32,9,65,128,
      128,128,204,3,73,27,33,6,12,9,11,2,64,32,9,65,209,167,237,131,4,75,13,0,32,6,187,33,18,2,64,32,9,65,228,151,219,128,4,79,13,0,68,0,0,0,0,0,0,240,63,32,18,68,24,45,68,84,251,33,249,63,160,34,17,32,17,162,
      34,17,68,129,94,12,253,255,255,223,63,162,161,32,17,32,17,162,34,19,68,66,58,5,225,83,85,165,63,162,160,32,17,32,19,162,32,17,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,
      160,182,140,68,0,0,0,0,0,0,240,63,32,18,68,24,45,68,84,251,33,249,191,160,34,18,32,18,162,34,18,68,129,94,12,253,255,255,223,63,162,161,32,18,32,18,162,34,17,68,66,58,5,225,83,85,165,63,162,160,32,18,32,
      17,162,32,18,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,32,16,65,0,72,27,33,6,12,10,11,68,24,45,68,84,251,33,9,64,68,24,45,68,84,251,33,9,192,32,16,65,0,72,27,32,
      18,160,34,17,32,17,162,34,18,32,17,154,162,34,19,32,18,32,18,162,162,32,18,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,249,0,42,191,160,162,32,19,32,18,68,178,251,110,137,16,17,129,63,162,68,
      119,172,203,84,85,85,197,191,160,162,32,17,161,160,182,33,6,12,9,11,2,64,2,64,32,9,65,214,227,136,135,4,73,13,0,32,9,65,255,255,255,251,7,77,13,1,32,6,32,6,147,33,6,12,10,11,32,6,187,33,18,32,9,65,224,
      219,191,133,4,73,13,8,68,24,45,68,84,251,33,25,64,68,24,45,68,84,251,33,25,192,32,16,65,0,72,27,32,18,160,34,17,32,17,32,17,162,34,18,162,34,19,32,18,32,18,162,162,32,18,68,167,70,59,140,135,205,198,62,
      162,68,116,231,202,226,249,0,42,191,160,162,32,17,32,19,32,18,68,178,251,110,137,16,17,129,63,162,68,119,172,203,84,85,85,197,191,160,162,160,160,182,33,6,12,9,11,2,64,32,9,65,218,159,164,238,4,75,13,0,
      32,6,187,34,18,32,18,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,17,68,0,0,0,80,251,33,249,191,162,160,32,17,68,99,98,26,97,180,16,81,190,162,160,33,18,2,64,
      32,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,20,12,8,11,65,128,128,128,128,120,33,20,12,7,11,32,3,65,136,4,106,65,128,129,128,128,0,65,136,2,16,128,128,128,128,0,26,32,3,66,128,128,128,128,208,
      227,252,180,53,55,3,128,4,32,3,66,128,128,128,128,168,196,224,241,54,55,3,248,3,32,3,66,128,128,128,128,132,164,137,189,56,55,3,240,3,32,3,66,128,128,128,128,184,240,134,248,57,55,3,232,3,32,3,66,128,128,
      128,128,150,138,179,188,59,55,3,224,3,32,3,66,128,128,128,128,136,211,145,252,60,55,3,216,3,32,3,66,128,128,128,128,208,133,145,186,62,55,3,208,3,32,3,66,128,128,128,128,180,191,200,252,63,55,3,200,3,32,
      3,65,200,2,106,65,0,65,128,1,16,129,128,128,128,0,26,32,3,65,200,1,106,65,0,65,128,1,16,129,128,128,128,0,26,32,3,65,200,0,106,65,0,65,128,1,16,129,128,128,128,0,26,32,4,253,12,0,0,0,0,0,0,0,0,0,0,0,0,
      0,0,0,0,34,21,253,11,3,0,32,5,32,21,253,11,3,0,32,3,65,8,106,65,48,106,32,21,253,11,3,0,32,3,32,21,253,11,3,8,32,3,32,3,65,136,4,106,32,9,65,23,118,34,8,65,231,0,106,65,255,1,113,65,24,110,34,22,65,2,116,
      106,34,7,40,2,0,183,34,18,57,3,200,2,32,3,32,18,32,9,32,8,65,234,126,106,34,8,65,23,116,107,190,187,34,19,162,68,0,0,0,0,0,0,0,0,160,57,3,72,32,3,32,7,65,4,106,40,2,0,183,34,18,57,3,208,2,32,3,32,18,32,
      19,162,68,0,0,0,0,0,0,0,0,160,57,3,80,32,3,32,7,65,8,106,40,2,0,183,34,18,57,3,216,2,32,3,32,18,32,19,162,68,0,0,0,0,0,0,0,0,160,57,3,88,32,3,32,7,65,12,106,40,2,0,183,34,18,57,3,224,2,32,3,32,18,32,19,
      162,68,0,0,0,0,0,0,0,0,160,57,3,96,65,47,32,22,65,104,108,32,8,106,34,23,107,33,24,65,48,32,23,107,33,25,32,23,65,104,106,33,26,32,23,65,231,7,106,173,66,52,134,191,33,27,65,3,33,14,3,64,32,3,65,200,0,
      106,32,14,65,15,113,34,28,65,3,116,106,43,3,0,33,18,2,64,32,14,65,1,72,34,15,13,0,32,14,65,15,106,33,9,65,0,33,7,3,64,32,7,65,15,113,65,2,116,33,8,2,64,2,64,32,18,68,0,0,0,0,0,0,112,62,162,34,17,153,68,
      0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,11,12,1,11,65,128,128,128,128,120,33,11,11,32,3,65,8,106,32,8,106,33,8,2,64,2,64,32,18,32,11,183,34,17,68,0,0,0,0,0,0,112,193,162,160,34,18,153,68,0,0,0,0,0,0,
      224,65,99,69,13,0,32,18,170,33,11,12,1,11,65,128,128,128,128,120,33,11,11,32,8,32,11,54,2,0,32,3,65,200,0,106,32,9,65,15,113,65,3,116,106,43,3,0,32,17,160,33,18,32,7,65,1,106,33,7,32,9,65,127,106,34,9,
      65,15,71,13,0,11,11,2,64,2,64,32,18,32,27,162,34,18,32,18,68,0,0,0,0,0,0,192,63,162,156,68,0,0,0,0,0,0,32,192,162,160,34,18,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,18,170,33,20,12,1,11,65,128,128,128,128,
      120,33,20,11,32,18,32,20,183,161,33,18,2,64,2,64,2,64,2,64,32,23,65,25,72,34,29,13,0,32,3,65,8,106,32,14,65,127,106,65,15,113,65,2,116,106,34,9,32,9,40,2,0,34,9,32,9,32,25,117,34,9,32,25,116,107,34,7,54,
      2,0,32,7,32,24,117,33,30,32,9,32,20,106,33,20,12,1,11,2,64,32,26,13,0,32,3,65,8,106,32,14,65,127,106,65,15,113,65,2,116,106,40,2,0,65,23,117,33,30,12,1,11,65,2,33,30,65,0,33,31,32,18,68,0,0,0,0,0,0,224,
      63,102,69,13,2,12,1,11,32,30,65,0,74,13,0,32,30,33,31,12,1,11,2,64,2,64,32,15,69,13,0,65,0,33,11,12,1,11,65,0,33,9,65,0,33,11,3,64,32,3,65,8,106,32,9,65,15,113,65,2,116,106,34,15,40,2,0,33,7,65,255,255,
      255,7,33,8,2,64,2,64,32,11,65,1,113,13,0,65,128,128,128,8,33,8,32,7,13,0,65,0,33,11,12,1,11,32,15,32,8,32,7,107,54,2,0,65,1,33,11,11,32,14,32,9,65,1,106,34,9,71,13,0,11,11,2,64,32,29,13,0,65,255,255,255,
      3,33,9,2,64,2,64,32,23,65,103,106,14,2,1,0,2,11,65,255,255,255,1,33,9,11,32,3,65,8,106,32,14,65,127,106,65,15,113,65,2,116,106,34,7,32,7,40,2,0,32,9,113,54,2,0,11,32,20,65,1,106,33,20,2,64,32,30,65,2,70,
      13,0,32,30,33,31,12,1,11,68,0,0,0,0,0,0,240,63,32,18,161,32,27,68,0,0,0,0,0,0,0,0,32,11,27,161,33,18,65,2,33,31,11,2,64,32,18,68,0,0,0,0,0,0,0,0,98,13,0,2,64,32,14,65,127,106,34,9,65,3,72,13,0,65,0,33,
      7,3,64,32,3,65,8,106,32,9,65,15,113,65,2,116,106,40,2,0,32,7,114,33,7,32,9,65,127,106,34,9,65,2,75,13,0,11,32,7,69,13,0,32,26,33,23,3,64,32,23,65,104,106,33,23,32,3,65,8,106,32,14,65,127,106,34,14,65,15,
      113,65,2,116,106,40,2,0,69,13,0,12,9,11,11,65,0,33,9,3,64,32,9,65,2,106,33,7,32,9,65,127,106,34,8,33,9,32,3,65,8,106,32,7,65,15,113,65,2,116,106,40,2,0,69,13,0,11,32,14,65,1,106,33,9,32,14,32,8,107,34,
      11,33,14,32,9,32,11,74,13,1,3,64,32,3,65,200,2,106,32,9,65,3,116,65,248,0,113,34,8,106,32,3,65,136,4,106,32,22,32,9,106,65,194,0,111,34,7,65,194,0,106,32,7,32,7,65,0,72,27,65,2,116,106,40,2,0,183,34,18,
      57,3,0,32,3,65,200,0,106,32,8,106,32,19,32,18,162,68,0,0,0,0,0,0,0,0,160,57,3,0,32,9,65,1,106,34,9,32,11,76,13,0,11,32,11,33,14,12,1,11,11,2,64,32,18,65,151,8,32,23,107,173,66,52,134,191,162,34,18,68,0,
      0,0,0,0,0,112,65,102,69,13,0,32,28,65,2,116,33,7,2,64,2,64,32,18,68,0,0,0,0,0,0,112,62,162,34,17,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,17,170,33,9,12,1,11,65,128,128,128,128,120,33,9,11,32,3,65,8,106,
      32,7,106,33,7,2,64,2,64,32,18,32,9,183,68,0,0,0,0,0,0,112,193,162,160,34,18,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,18,170,33,8,12,1,11,65,128,128,128,128,120,33,8,11,32,7,32,8,54,2,0,32,14,65,1,106,34,
      14,65,15,113,33,28,12,5,11,32,18,153,68,0,0,0,0,0,0,224,65,99,69,13,1,32,18,170,33,9,12,3,11,32,0,40,2,32,65,1,106,33,8,65,0,33,9,12,1,11,11,65,128,128,128,128,120,33,9,11,32,26,33,23,11,32,3,65,8,106,
      32,28,65,2,116,106,32,9,54,2,0,11,2,64,2,64,32,23,65,128,8,72,13,0,68,0,0,0,0,0,0,224,127,33,18,32,23,65,129,120,106,34,9,65,255,7,77,13,1,32,23,65,253,23,32,23,65,253,23,72,27,65,130,112,106,33,9,68,0,
      0,0,0,0,0,240,127,33,18,12,1,11,68,0,0,0,0,0,0,240,63,33,18,2,64,32,23,65,130,120,72,13,0,32,23,33,9,12,1,11,2,64,32,23,65,184,112,77,13,0,32,23,65,201,7,106,33,9,68,0,0,0,0,0,0,96,3,33,18,12,1,11,32,23,
      65,240,104,32,23,65,240,104,74,27,65,146,15,106,33,9,68,0,0,0,0,0,0,0,0,33,18,11,2,64,2,64,32,14,65,0,78,13,0,68,0,0,0,0,0,0,0,0,33,18,12,1,11,32,18,32,9,65,255,7,106,173,66,52,134,191,162,33,18,32,14,
      33,9,3,64,32,3,65,200,0,106,32,9,65,15,113,34,7,65,3,116,106,32,18,32,3,65,8,106,32,7,65,2,116,106,40,2,0,183,162,57,3,0,32,18,68,0,0,0,0,0,0,112,62,162,33,18,32,9,65,127,106,34,9,65,127,71,13,0,11,65,
      0,33,15,32,14,33,8,3,64,32,15,65,3,32,15,65,3,73,27,65,1,106,33,11,68,0,0,0,0,0,0,0,0,33,18,32,3,65,200,3,106,33,9,65,0,33,7,3,64,32,18,32,9,43,3,0,32,3,65,200,0,106,32,8,32,7,106,65,15,113,65,3,116,106,
      43,3,0,162,160,33,18,32,9,65,8,106,33,9,32,11,32,7,65,1,106,34,7,71,13,0,11,32,3,65,200,1,106,32,14,32,8,107,65,15,113,65,3,116,106,32,18,57,3,0,32,8,65,127,106,33,8,32,15,32,14,71,33,9,32,15,65,1,106,
      33,15,32,9,13,0,11,68,0,0,0,0,0,0,0,0,33,18,3,64,32,18,32,3,65,200,1,106,32,14,65,15,113,65,3,116,106,43,3,0,160,33,18,32,14,65,127,106,34,14,65,127,71,13,0,11,11,32,18,154,32,18,32,31,27,33,18,32,16,65,
      127,74,13,0,65,0,32,20,107,33,20,32,18,154,33,18,11,2,64,2,64,2,64,2,64,32,20,65,3,113,14,3,0,1,2,3,11,32,18,32,18,32,18,162,34,17,162,34,19,32,17,32,17,162,162,32,17,68,167,70,59,140,135,205,198,62,162,
      68,116,231,202,226,249,0,42,191,160,162,32,18,32,19,32,17,68,178,251,110,137,16,17,129,63,162,68,119,172,203,84,85,85,197,191,160,162,160,160,182,33,6,12,4,11,32,18,32,18,162,34,18,68,129,94,12,253,255,
      255,223,191,162,68,0,0,0,0,0,0,240,63,160,32,18,32,18,162,34,17,68,66,58,5,225,83,85,165,63,162,160,32,18,32,17,162,32,18,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,
      182,33,6,12,3,11,32,18,32,18,162,34,17,32,18,154,162,34,19,32,17,32,17,162,162,32,17,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,249,0,42,191,160,162,32,19,32,17,68,178,251,110,137,16,17,129,
      63,162,68,119,172,203,84,85,85,197,191,160,162,32,18,161,160,182,33,6,12,2,11,32,18,32,18,162,34,18,68,129,94,12,253,255,255,223,191,162,68,0,0,0,0,0,0,240,63,160,32,18,32,18,162,34,17,68,66,58,5,225,83,
      85,165,63,162,160,32,18,32,17,162,32,18,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,140,33,6,12,1,11,68,0,0,0,0,0,0,240,63,32,18,68,210,33,51,127,124,217,18,64,160,
      34,17,32,17,162,34,17,68,129,94,12,253,255,255,223,63,162,161,32,17,32,17,162,34,19,68,66,58,5,225,83,85,165,63,162,160,32,17,32,19,162,32,17,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,
      86,191,160,162,160,182,68,0,0,0,0,0,0,240,63,32,18,68,210,33,51,127,124,217,18,192,160,34,18,32,18,162,34,18,68,129,94,12,253,255,255,223,63,162,161,32,18,32,18,162,34,17,68,66,58,5,225,83,85,165,63,162,
      160,32,18,32,17,162,32,18,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,140,32,16,65,0,72,27,33,6,11,32,6,67,154,153,25,62,148,33,6,2,64,2,64,32,0,42,2,12,32,0,42,2,
      36,146,34,10,67,0,0,0,0,93,69,13,0,32,10,16,132,128,128,128,0,67,219,15,201,64,146,33,10,12,1,11,32,10,67,219,15,201,64,93,13,0,2,64,32,10,67,219,15,73,65,93,69,13,0,32,10,67,219,15,201,192,146,33,10,12,
      1,11,32,10,16,132,128,128,128,0,33,10,11,32,6,67,0,0,0,0,146,33,6,32,0,32,10,56,2,12,65,1,33,9,11,32,0,32,9,54,2,44,11,32,1,32,0,40,2,0,65,2,116,106,32,6,56,2,0,32,0,32,0,40,2,0,65,1,106,34,9,54,2,0,32,
      9,32,2,71,13,0,11,11,32,0,65,0,54,2,0,32,3,65,144,6,106,36,128,128,128,128,0,11,156,3,1,5,127,2,64,32,0,188,34,1,65,23,118,65,255,1,113,34,2,65,255,1,71,13,0,32,0,67,219,15,201,64,148,34,0,32,0,149,15,
      11,2,64,32,1,65,252,255,255,255,7,113,65,219,159,164,134,4,75,13,0,32,0,67,0,0,0,0,148,32,0,32,1,65,255,255,255,255,7,113,65,219,159,164,134,4,70,27,15,11,2,64,2,64,32,2,13,0,65,0,33,2,2,64,32,1,65,9,116,
      34,3,65,0,72,13,0,65,0,33,2,3,64,32,2,65,127,106,33,2,32,3,65,1,116,34,3,65,127,74,13,0,11,11,32,1,65,1,32,2,107,116,33,3,12,1,11,32,1,65,255,255,255,3,113,65,128,128,128,4,114,33,3,11,2,64,2,64,2,64,32,
      2,65,130,1,72,13,0,32,2,65,1,106,33,4,3,64,2,64,32,3,65,165,224,219,121,106,34,2,65,0,72,13,0,32,2,33,3,32,2,69,13,3,11,32,3,65,1,116,33,3,32,4,65,127,106,34,4,65,130,1,74,13,0,11,65,129,1,33,2,11,2,64,
      2,64,2,64,2,64,32,3,65,165,224,219,121,106,34,4,65,0,72,13,0,32,4,33,3,32,4,69,13,1,11,32,3,65,255,255,255,3,77,13,1,32,3,33,5,12,2,11,32,0,67,0,0,0,0,148,15,11,3,64,32,2,65,127,106,33,2,32,3,65,128,128,
      128,2,73,33,4,32,3,65,1,116,34,5,33,3,32,4,13,0,11,11,32,1,65,128,128,128,128,120,113,33,3,2,64,32,2,65,1,72,13,0,32,5,65,128,128,128,124,106,32,2,65,23,116,114,33,2,12,2,11,32,5,65,1,32,2,107,117,33,2,
      12,1,11,32,0,67,0,0,0,0,148,15,11,32,2,32,3,114,190,11,11,138,131,128,128,0,3,0,65,0,11,8,0,0,0,0,0,0,0,0,0,65,16,11,104,79,0,0,0,1,0,0,0,77,0,0,0,1,0,0,0,69,0,0,0,2,0,0,0,71,0,0,0,2,0,0,0,76,0,0,0,1,0,
      0,0,74,0,0,0,1,0,0,0,65,0,0,0,2,0,0,0,67,0,0,0,2,0,0,0,74,0,0,0,1,0,0,0,72,0,0,0,1,0,0,0,64,0,0,0,2,0,0,0,67,0,0,0,2,0,0,0,72,0,0,0,4,0,0,0,0,65,128,1,11,136,2,131,249,162,0,68,78,110,0,252,41,21,0,209,
      87,39,0,221,52,245,0,98,219,192,0,60,153,149,0,65,144,67,0,99,81,254,0,187,222,171,0,183,97,197,0,58,110,36,0,210,77,66,0,73,6,224,0,9,234,46,0,28,146,209,0,235,29,254,0,41,177,28,0,232,62,167,0,245,53,
      130,0,68,187,46,0,156,233,132,0,180,38,112,0,65,126,95,0,214,145,57,0,83,131,57,0,156,244,57,0,139,95,132,0,40,249,189,0,248,31,59,0,222,255,151,0,15,152,5,0,17,47,239,0,10,90,139,0,109,31,109,0,207,126,
      54,0,9,203,39,0,70,79,183,0,158,102,63,0,45,234,95,0,186,39,117,0,229,235,199,0,61,123,241,0,247,57,7,0,146,82,138,0,251,107,234,0,31,177,95,0,8,93,141,0,48,3,86,0,123,252,70,0,240,171,107,0,32,188,207,
      0,54,244,154,0,227,169,29,0,94,97,145,0,8,27,230,0,133,153,101,0,160,20,95,0,141,64,104,0,128,216,255,0,39,115,77,0,6,6,49,0,202,86,21,0,201,168,115,0,123,226,96,0,107,140,192,0,0,236,129,128,128,0,7,108,
      105,110,107,105,110,103,2,8,151,129,128,128,0,9,0,32,2,10,105,110,105,116,105,97,108,105,115,101,1,2,12,46,76,95,102,114,101,113,117,101,110,99,121,0,0,8,0,32,3,12,97,100,118,97,110,99,101,66,108,111,99,
      107,2,16,0,1,2,8,46,76,109,101,108,111,100,121,1,0,104,1,2,13,46,76,95,95,99,111,110,115,116,97,110,116,95,2,0,136,2,0,16,0,0,16,1,0,2,4,55,46,76,115,116,100,95,95,105,110,116,114,105,110,115,105,99,115,
      95,95,105,110,116,101,114,110,97,108,95,95,109,97,116,104,95,105,109,112,108,101,109,101,110,116,97,116,105,111,110,115,95,95,102,109,111,100,5,192,128,128,128,0,3,17,46,98,115,115,46,46,76,95,102,114,
      101,113,117,101,110,99,121,3,0,16,46,114,111,100,97,116,97,46,46,76,109,101,108,111,100,121,4,0,21,46,114,111,100,97,116,97,46,46,76,95,95,99,111,110,115,116,97,110,116,95,4,0,0,199,128,128,128,0,10,114,
      101,108,111,99,46,67,79,68,69,5,14,3,9,1,0,7,96,3,7,108,3,4,169,2,4,4,4,193,2,4,0,3,225,8,1,0,4,230,14,5,0,0,239,14,6,0,129,16,7,0,147,16,7,0,165,16,7,0,187,36,8,0,242,36,8,7,206,37,3,0,154,128,128,128,
      0,15,116,97,114,103,101,116,95,102,101,97,116,117,114,101,115,1,43,7,115,105,109,100,49,50,56,]);
  }

  /** @access private */
  _getWasmBytesNonSIMD()
  {
    return new Uint8Array([0,97,115,109,1,0,0,0,1,154,128,128,128,0,4,96,4,127,127,127,124,0,96,3,127,127,127,0,96,3,127,127,127,1,127,96,1,125,1,125,2,201,128,128,128,0,4,3,101,110,118,15,95,95,108,105,110,
      101,97,114,95,109,101,109,111,114,121,2,0,1,3,101,110,118,15,95,95,115,116,97,99,107,95,112,111,105,110,116,101,114,3,127,1,3,101,110,118,6,109,101,109,99,112,121,0,2,3,101,110,118,6,109,101,109,115,101,
      116,0,2,3,132,128,128,128,0,3,0,1,3,7,157,128,128,128,0,2,10,105,110,105,116,105,97,108,105,115,101,0,2,12,97,100,118,97,110,99,101,66,108,111,99,107,0,3,12,129,128,128,128,0,3,10,143,169,128,128,0,3,64,
      0,65,0,32,3,57,3,128,128,128,128,0,2,64,32,3,68,0,0,0,0,0,0,28,64,163,34,3,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,0,32,3,170,54,2,8,15,11,32,0,65,128,128,128,128,120,54,2,8,11,173,37,11,5,127,1,125,3,
      127,1,125,1,127,2,125,3,127,3,124,6,127,1,124,4,127,35,128,128,128,128,0,65,144,6,107,34,3,36,128,128,128,128,0,2,64,32,0,40,2,0,32,2,70,13,0,32,3,65,24,106,33,4,32,3,65,40,106,33,5,32,3,65,48,106,33,6,
      32,3,65,192,0,106,33,7,3,64,67,0,0,0,0,33,8,2,64,32,0,40,2,44,34,9,65,127,70,13,0,65,0,33,10,2,64,2,64,32,9,65,0,74,13,0,65,0,33,11,12,1,11,65,1,33,11,11,2,64,2,64,2,64,2,64,2,64,2,64,2,64,3,64,2,64,2,
      64,32,11,14,2,0,1,1,11,32,0,32,10,54,2,32,65,1,33,11,12,1,11,2,64,2,64,32,9,65,1,72,13,0,32,0,40,2,40,33,11,65,0,33,9,12,1,11,2,64,32,0,40,2,32,34,11,65,12,76,13,0,65,127,33,11,67,0,0,0,0,33,8,12,9,11,
      32,0,40,2,8,32,11,65,3,116,34,10,65,148,128,128,128,0,106,40,2,0,108,33,11,67,0,0,128,63,33,8,2,64,32,10,65,144,128,128,128,0,106,40,2,0,65,187,127,106,178,67,171,170,170,61,148,34,12,188,34,13,65,255,
      255,255,255,7,113,34,10,69,13,0,2,64,32,10,65,129,128,128,252,7,73,13,0,32,12,67,0,0,0,64,146,33,8,12,1,11,2,64,2,64,32,10,65,128,128,128,252,3,70,13,0,32,10,65,128,128,128,252,7,71,13,1,32,12,67,0,0,0,
      0,32,13,65,127,74,27,33,8,12,2,11,67,0,0,0,64,67,0,0,0,63,32,13,65,127,74,27,33,8,12,1,11,2,64,32,13,65,128,128,128,248,3,71,13,0,67,243,4,181,63,33,8,12,1,11,67,0,0,128,64,33,8,32,13,65,128,128,128,128,
      4,70,13,0,2,64,32,10,65,129,128,128,232,4,73,13,0,67,0,0,128,127,67,0,0,0,0,32,13,65,0,74,27,33,8,12,1,11,67,0,0,128,127,33,8,32,12,67,0,0,0,0,148,32,12,32,13,65,128,96,113,190,34,14,147,146,34,12,32,14,
      146,34,15,188,34,10,65,128,128,128,152,4,74,13,0,2,64,2,64,2,64,32,10,65,128,128,128,152,4,71,13,0,65,128,128,128,152,4,33,16,32,12,67,60,170,56,51,146,32,15,32,14,147,94,69,13,1,12,3,11,67,0,0,0,0,33,
      8,32,10,65,255,255,255,255,7,113,34,16,65,128,128,216,152,4,75,13,2,2,64,32,10,65,128,128,216,152,124,71,13,0,32,12,32,15,32,14,147,95,13,3,11,65,0,33,13,32,16,65,128,128,128,248,3,77,13,1,11,65,0,65,128,
      128,128,4,32,16,65,23,118,65,130,127,106,118,32,10,106,34,16,65,255,255,255,3,113,65,128,128,128,4,114,65,150,1,32,16,65,23,118,65,255,1,113,34,17,107,118,34,13,107,32,13,32,10,65,0,72,27,33,13,32,12,32,
      14,65,128,128,128,124,32,17,65,129,127,106,117,32,16,113,190,147,34,14,146,188,33,10,11,2,64,2,64,2,64,32,13,65,23,116,32,10,65,128,128,126,113,190,34,8,67,0,114,49,63,148,34,15,32,8,67,140,190,191,53,
      148,32,12,32,8,32,14,147,147,67,24,114,49,63,148,146,34,14,146,34,8,32,8,32,8,32,8,32,8,148,34,12,32,12,32,12,32,12,32,12,67,76,187,49,51,148,67,14,234,221,181,146,148,67,85,179,138,56,146,148,67,97,11,
      54,187,146,148,67,171,170,42,62,146,148,147,34,12,148,32,12,67,0,0,0,192,146,149,32,14,32,8,32,15,147,147,34,12,32,8,32,12,148,146,147,147,67,0,0,128,63,146,34,8,188,106,34,10,65,255,255,255,3,74,13,0,
      2,64,32,13,65,128,1,72,13,0,32,8,67,0,0,0,127,148,33,8,32,13,65,129,127,106,34,10,65,255,0,75,13,2,32,10,33,13,12,3,11,32,13,65,130,127,78,13,2,32,13,65,230,0,106,33,10,32,8,67,0,0,128,12,148,33,8,2,64,
      32,13,65,155,126,77,13,0,32,10,33,13,12,3,11,32,8,67,0,0,128,12,148,33,8,32,13,65,182,125,32,13,65,182,125,74,27,65,204,1,106,33,13,12,2,11,32,10,190,33,8,12,2,11,32,8,67,0,0,0,127,148,33,8,32,13,65,253,
      2,32,13,65,253,2,72,27,65,130,126,106,33,13,11,32,8,32,13,65,23,116,65,128,128,128,252,3,106,190,148,33,8,11,32,0,68,0,0,0,0,0,0,240,63,65,0,43,3,128,128,128,128,0,163,32,8,67,0,0,220,67,148,187,162,68,
      24,45,68,84,251,33,25,64,162,182,56,2,36,11,32,0,32,11,65,127,106,34,11,54,2,40,2,64,2,64,32,11,65,0,72,13,0,2,64,32,0,42,2,12,34,8,188,34,18,65,255,255,255,255,7,113,34,11,65,218,159,164,250,3,75,13,0,
      32,8,32,8,187,34,19,32,19,162,34,20,32,19,162,34,21,32,20,32,20,162,162,32,20,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,249,0,42,191,160,162,32,21,32,20,68,178,251,110,137,16,17,129,63,162,
      68,119,172,203,84,85,85,197,191,160,162,32,19,160,160,182,32,11,65,128,128,128,204,3,73,27,33,8,12,9,11,2,64,32,11,65,209,167,237,131,4,75,13,0,32,8,187,33,20,2,64,32,11,65,228,151,219,128,4,79,13,0,68,
      0,0,0,0,0,0,240,63,32,20,68,24,45,68,84,251,33,249,63,160,34,19,32,19,162,34,19,68,129,94,12,253,255,255,223,63,162,161,32,19,32,19,162,34,21,68,66,58,5,225,83,85,165,63,162,160,32,19,32,21,162,32,19,68,
      105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,140,68,0,0,0,0,0,0,240,63,32,20,68,24,45,68,84,251,33,249,191,160,34,20,32,20,162,34,20,68,129,94,12,253,255,255,223,63,162,
      161,32,20,32,20,162,34,19,68,66,58,5,225,83,85,165,63,162,160,32,20,32,19,162,32,20,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,32,18,65,0,72,27,33,8,12,10,11,68,
      24,45,68,84,251,33,9,64,68,24,45,68,84,251,33,9,192,32,18,65,0,72,27,32,20,160,34,19,32,19,162,34,20,32,19,154,162,34,21,32,20,32,20,162,162,32,20,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,
      249,0,42,191,160,162,32,21,32,20,68,178,251,110,137,16,17,129,63,162,68,119,172,203,84,85,85,197,191,160,162,32,19,161,160,182,33,8,12,9,11,2,64,2,64,32,11,65,214,227,136,135,4,73,13,0,32,11,65,255,255,
      255,251,7,77,13,1,32,8,32,8,147,33,8,12,10,11,32,8,187,33,20,32,11,65,224,219,191,133,4,73,13,8,68,24,45,68,84,251,33,25,64,68,24,45,68,84,251,33,25,192,32,18,65,0,72,27,32,20,160,34,19,32,19,32,19,162,
      34,20,162,34,21,32,20,32,20,162,162,32,20,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,249,0,42,191,160,162,32,19,32,21,32,20,68,178,251,110,137,16,17,129,63,162,68,119,172,203,84,85,85,197,191,
      160,162,160,160,182,33,8,12,9,11,2,64,32,11,65,218,159,164,238,4,75,13,0,32,8,187,34,20,32,20,68,131,200,201,109,48,95,228,63,162,68,0,0,0,0,0,0,56,67,160,68,0,0,0,0,0,0,56,195,160,34,19,68,0,0,0,80,251,
      33,249,191,162,160,32,19,68,99,98,26,97,180,16,81,190,162,160,33,20,2,64,32,19,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,19,170,33,22,12,8,11,65,128,128,128,128,120,33,22,12,7,11,32,3,65,136,4,106,65,128,
      129,128,128,0,65,136,2,16,128,128,128,128,0,26,32,3,66,128,128,128,128,208,227,252,180,53,55,3,128,4,32,3,66,128,128,128,128,168,196,224,241,54,55,3,248,3,32,3,66,128,128,128,128,132,164,137,189,56,55,
      3,240,3,32,3,66,128,128,128,128,184,240,134,248,57,55,3,232,3,32,3,66,128,128,128,128,150,138,179,188,59,55,3,224,3,32,3,66,128,128,128,128,136,211,145,252,60,55,3,216,3,32,3,66,128,128,128,128,208,133,
      145,186,62,55,3,208,3,32,3,66,128,128,128,128,180,191,200,252,63,55,3,200,3,32,3,65,200,2,106,65,0,65,128,1,16,129,128,128,128,0,26,32,3,65,200,1,106,65,0,65,128,1,16,129,128,128,128,0,26,32,3,65,200,0,
      106,65,0,65,128,1,16,129,128,128,128,0,26,32,3,65,8,106,65,8,106,66,0,55,3,0,32,4,66,0,55,3,0,32,3,65,8,106,65,24,106,66,0,55,3,0,32,5,66,0,55,3,0,32,6,66,0,55,3,0,32,3,65,8,106,65,48,106,66,0,55,3,0,32,
      7,66,0,55,3,0,32,3,66,0,55,3,8,32,3,32,3,65,136,4,106,32,11,65,23,118,34,10,65,231,0,106,65,255,1,113,65,24,110,34,23,65,2,116,106,34,9,40,2,0,183,34,20,57,3,200,2,32,3,32,20,32,11,32,10,65,234,126,106,
      34,10,65,23,116,107,190,187,34,21,162,68,0,0,0,0,0,0,0,0,160,57,3,72,32,3,32,9,65,4,106,40,2,0,183,34,20,57,3,208,2,32,3,32,20,32,21,162,68,0,0,0,0,0,0,0,0,160,57,3,80,32,3,32,9,65,8,106,40,2,0,183,34,
      20,57,3,216,2,32,3,32,20,32,21,162,68,0,0,0,0,0,0,0,0,160,57,3,88,32,3,32,9,65,12,106,40,2,0,183,34,20,57,3,224,2,32,3,32,20,32,21,162,68,0,0,0,0,0,0,0,0,160,57,3,96,65,47,32,23,65,104,108,32,10,106,34,
      24,107,33,25,65,48,32,24,107,33,26,32,24,65,104,106,33,27,32,24,65,231,7,106,173,66,52,134,191,33,28,65,3,33,16,3,64,32,3,65,200,0,106,32,16,65,15,113,34,29,65,3,116,106,43,3,0,33,20,2,64,32,16,65,1,72,
      34,17,13,0,32,16,65,15,106,33,11,65,0,33,9,3,64,32,9,65,15,113,65,2,116,33,10,2,64,2,64,32,20,68,0,0,0,0,0,0,112,62,162,34,19,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,19,170,33,13,12,1,11,65,128,128,128,
      128,120,33,13,11,32,3,65,8,106,32,10,106,33,10,2,64,2,64,32,20,32,13,183,34,19,68,0,0,0,0,0,0,112,193,162,160,34,20,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,20,170,33,13,12,1,11,65,128,128,128,128,120,33,
      13,11,32,10,32,13,54,2,0,32,3,65,200,0,106,32,11,65,15,113,65,3,116,106,43,3,0,32,19,160,33,20,32,9,65,1,106,33,9,32,11,65,127,106,34,11,65,15,71,13,0,11,11,2,64,2,64,32,20,32,28,162,34,20,32,20,68,0,0,
      0,0,0,0,192,63,162,156,68,0,0,0,0,0,0,32,192,162,160,34,20,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,20,170,33,22,12,1,11,65,128,128,128,128,120,33,22,11,32,20,32,22,183,161,33,20,2,64,2,64,2,64,2,64,32,
      24,65,25,72,34,30,13,0,32,3,65,8,106,32,16,65,127,106,65,15,113,65,2,116,106,34,11,32,11,40,2,0,34,11,32,11,32,26,117,34,11,32,26,116,107,34,9,54,2,0,32,9,32,25,117,33,31,32,11,32,22,106,33,22,12,1,11,
      2,64,32,27,13,0,32,3,65,8,106,32,16,65,127,106,65,15,113,65,2,116,106,40,2,0,65,23,117,33,31,12,1,11,65,2,33,31,65,0,33,32,32,20,68,0,0,0,0,0,0,224,63,102,69,13,2,12,1,11,32,31,65,0,74,13,0,32,31,33,32,
      12,1,11,2,64,2,64,32,17,69,13,0,65,0,33,13,12,1,11,65,0,33,11,65,0,33,13,3,64,32,3,65,8,106,32,11,65,15,113,65,2,116,106,34,17,40,2,0,33,9,65,255,255,255,7,33,10,2,64,2,64,32,13,65,1,113,13,0,65,128,128,
      128,8,33,10,32,9,13,0,65,0,33,13,12,1,11,32,17,32,10,32,9,107,54,2,0,65,1,33,13,11,32,16,32,11,65,1,106,34,11,71,13,0,11,11,2,64,32,30,13,0,65,255,255,255,3,33,11,2,64,2,64,32,24,65,103,106,14,2,1,0,2,
      11,65,255,255,255,1,33,11,11,32,3,65,8,106,32,16,65,127,106,65,15,113,65,2,116,106,34,9,32,9,40,2,0,32,11,113,54,2,0,11,32,22,65,1,106,33,22,2,64,32,31,65,2,70,13,0,32,31,33,32,12,1,11,68,0,0,0,0,0,0,240,
      63,32,20,161,32,28,68,0,0,0,0,0,0,0,0,32,13,27,161,33,20,65,2,33,32,11,2,64,32,20,68,0,0,0,0,0,0,0,0,98,13,0,2,64,32,16,65,127,106,34,11,65,3,72,13,0,65,0,33,9,3,64,32,3,65,8,106,32,11,65,15,113,65,2,116,
      106,40,2,0,32,9,114,33,9,32,11,65,127,106,34,11,65,2,75,13,0,11,32,9,69,13,0,32,27,33,24,3,64,32,24,65,104,106,33,24,32,3,65,8,106,32,16,65,127,106,34,16,65,15,113,65,2,116,106,40,2,0,69,13,0,12,9,11,11,
      65,0,33,11,3,64,32,11,65,2,106,33,9,32,11,65,127,106,34,10,33,11,32,3,65,8,106,32,9,65,15,113,65,2,116,106,40,2,0,69,13,0,11,32,16,65,1,106,33,11,32,16,32,10,107,34,13,33,16,32,11,32,13,74,13,1,3,64,32,
      3,65,200,2,106,32,11,65,3,116,65,248,0,113,34,10,106,32,3,65,136,4,106,32,23,32,11,106,65,194,0,111,34,9,65,194,0,106,32,9,32,9,65,0,72,27,65,2,116,106,40,2,0,183,34,20,57,3,0,32,3,65,200,0,106,32,10,106,
      32,21,32,20,162,68,0,0,0,0,0,0,0,0,160,57,3,0,32,11,65,1,106,34,11,32,13,76,13,0,11,32,13,33,16,12,1,11,11,2,64,32,20,65,151,8,32,24,107,173,66,52,134,191,162,34,20,68,0,0,0,0,0,0,112,65,102,69,13,0,32,
      29,65,2,116,33,9,2,64,2,64,32,20,68,0,0,0,0,0,0,112,62,162,34,19,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,19,170,33,11,12,1,11,65,128,128,128,128,120,33,11,11,32,3,65,8,106,32,9,106,33,9,2,64,2,64,32,20,
      32,11,183,68,0,0,0,0,0,0,112,193,162,160,34,20,153,68,0,0,0,0,0,0,224,65,99,69,13,0,32,20,170,33,10,12,1,11,65,128,128,128,128,120,33,10,11,32,9,32,10,54,2,0,32,16,65,1,106,34,16,65,15,113,33,29,12,5,11,
      32,20,153,68,0,0,0,0,0,0,224,65,99,69,13,1,32,20,170,33,11,12,3,11,32,0,40,2,32,65,1,106,33,10,65,0,33,11,12,1,11,11,65,128,128,128,128,120,33,11,11,32,27,33,24,11,32,3,65,8,106,32,29,65,2,116,106,32,11,
      54,2,0,11,2,64,2,64,32,24,65,128,8,72,13,0,68,0,0,0,0,0,0,224,127,33,20,32,24,65,129,120,106,34,11,65,255,7,77,13,1,32,24,65,253,23,32,24,65,253,23,72,27,65,130,112,106,33,11,68,0,0,0,0,0,0,240,127,33,
      20,12,1,11,68,0,0,0,0,0,0,240,63,33,20,2,64,32,24,65,130,120,72,13,0,32,24,33,11,12,1,11,2,64,32,24,65,184,112,77,13,0,32,24,65,201,7,106,33,11,68,0,0,0,0,0,0,96,3,33,20,12,1,11,32,24,65,240,104,32,24,
      65,240,104,74,27,65,146,15,106,33,11,68,0,0,0,0,0,0,0,0,33,20,11,2,64,2,64,32,16,65,0,78,13,0,68,0,0,0,0,0,0,0,0,33,20,12,1,11,32,20,32,11,65,255,7,106,173,66,52,134,191,162,33,20,32,16,33,11,3,64,32,3,
      65,200,0,106,32,11,65,15,113,34,9,65,3,116,106,32,20,32,3,65,8,106,32,9,65,2,116,106,40,2,0,183,162,57,3,0,32,20,68,0,0,0,0,0,0,112,62,162,33,20,32,11,65,127,106,34,11,65,127,71,13,0,11,65,0,33,17,32,16,
      33,10,3,64,32,17,65,3,32,17,65,3,73,27,65,1,106,33,13,68,0,0,0,0,0,0,0,0,33,20,32,3,65,200,3,106,33,11,65,0,33,9,3,64,32,20,32,11,43,3,0,32,3,65,200,0,106,32,10,32,9,106,65,15,113,65,3,116,106,43,3,0,162,
      160,33,20,32,11,65,8,106,33,11,32,13,32,9,65,1,106,34,9,71,13,0,11,32,3,65,200,1,106,32,16,32,10,107,65,15,113,65,3,116,106,32,20,57,3,0,32,10,65,127,106,33,10,32,17,32,16,71,33,11,32,17,65,1,106,33,17,
      32,11,13,0,11,68,0,0,0,0,0,0,0,0,33,20,3,64,32,20,32,3,65,200,1,106,32,16,65,15,113,65,3,116,106,43,3,0,160,33,20,32,16,65,127,106,34,16,65,127,71,13,0,11,11,32,20,154,32,20,32,32,27,33,20,32,18,65,127,
      74,13,0,65,0,32,22,107,33,22,32,20,154,33,20,11,2,64,2,64,2,64,2,64,32,22,65,3,113,14,3,0,1,2,3,11,32,20,32,20,32,20,162,34,19,162,34,21,32,19,32,19,162,162,32,19,68,167,70,59,140,135,205,198,62,162,68,
      116,231,202,226,249,0,42,191,160,162,32,20,32,21,32,19,68,178,251,110,137,16,17,129,63,162,68,119,172,203,84,85,85,197,191,160,162,160,160,182,33,8,12,4,11,32,20,32,20,162,34,20,68,129,94,12,253,255,255,
      223,191,162,68,0,0,0,0,0,0,240,63,160,32,20,32,20,162,34,19,68,66,58,5,225,83,85,165,63,162,160,32,20,32,19,162,32,20,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,
      33,8,12,3,11,32,20,32,20,162,34,19,32,20,154,162,34,21,32,19,32,19,162,162,32,19,68,167,70,59,140,135,205,198,62,162,68,116,231,202,226,249,0,42,191,160,162,32,21,32,19,68,178,251,110,137,16,17,129,63,
      162,68,119,172,203,84,85,85,197,191,160,162,32,20,161,160,182,33,8,12,2,11,32,20,32,20,162,34,20,68,129,94,12,253,255,255,223,191,162,68,0,0,0,0,0,0,240,63,160,32,20,32,20,162,34,19,68,66,58,5,225,83,85,
      165,63,162,160,32,20,32,19,162,32,20,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,140,33,8,12,1,11,68,0,0,0,0,0,0,240,63,32,20,68,210,33,51,127,124,217,18,64,160,34,
      19,32,19,162,34,19,68,129,94,12,253,255,255,223,63,162,161,32,19,32,19,162,34,21,68,66,58,5,225,83,85,165,63,162,160,32,19,32,21,162,32,19,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,
      191,160,162,160,182,68,0,0,0,0,0,0,240,63,32,20,68,210,33,51,127,124,217,18,192,160,34,20,32,20,162,34,20,68,129,94,12,253,255,255,223,63,162,161,32,20,32,20,162,34,19,68,66,58,5,225,83,85,165,63,162,160,
      32,20,32,19,162,32,20,68,105,80,238,224,66,147,249,62,162,68,39,30,15,232,135,192,86,191,160,162,160,182,140,32,18,65,0,72,27,33,8,11,32,8,67,154,153,25,62,148,33,8,2,64,2,64,32,0,42,2,12,32,0,42,2,36,
      146,34,12,67,0,0,0,0,93,69,13,0,32,12,16,132,128,128,128,0,67,219,15,201,64,146,33,12,12,1,11,32,12,67,219,15,201,64,93,13,0,2,64,32,12,67,219,15,73,65,93,69,13,0,32,12,67,219,15,201,192,146,33,12,12,1,
      11,32,12,16,132,128,128,128,0,33,12,11,32,8,67,0,0,0,0,146,33,8,32,0,32,12,56,2,12,65,1,33,11,11,32,0,32,11,54,2,44,11,32,1,32,0,40,2,0,65,2,116,106,32,8,56,2,0,32,0,32,0,40,2,0,65,1,106,34,11,54,2,0,32,
      11,32,2,71,13,0,11,11,32,0,65,0,54,2,0,32,3,65,144,6,106,36,128,128,128,128,0,11,156,3,1,5,127,2,64,32,0,188,34,1,65,23,118,65,255,1,113,34,2,65,255,1,71,13,0,32,0,67,219,15,201,64,148,34,0,32,0,149,15,
      11,2,64,32,1,65,252,255,255,255,7,113,65,219,159,164,134,4,75,13,0,32,0,67,0,0,0,0,148,32,0,32,1,65,255,255,255,255,7,113,65,219,159,164,134,4,70,27,15,11,2,64,2,64,32,2,13,0,65,0,33,2,2,64,32,1,65,9,116,
      34,3,65,0,72,13,0,65,0,33,2,3,64,32,2,65,127,106,33,2,32,3,65,1,116,34,3,65,127,74,13,0,11,11,32,1,65,1,32,2,107,116,33,3,12,1,11,32,1,65,255,255,255,3,113,65,128,128,128,4,114,33,3,11,2,64,2,64,2,64,32,
      2,65,130,1,72,13,0,32,2,65,1,106,33,4,3,64,2,64,32,3,65,165,224,219,121,106,34,2,65,0,72,13,0,32,2,33,3,32,2,69,13,3,11,32,3,65,1,116,33,3,32,4,65,127,106,34,4,65,130,1,74,13,0,11,65,129,1,33,2,11,2,64,
      2,64,2,64,2,64,32,3,65,165,224,219,121,106,34,4,65,0,72,13,0,32,4,33,3,32,4,69,13,1,11,32,3,65,255,255,255,3,77,13,1,32,3,33,5,12,2,11,32,0,67,0,0,0,0,148,15,11,3,64,32,2,65,127,106,33,2,32,3,65,128,128,
      128,2,73,33,4,32,3,65,1,116,34,5,33,3,32,4,13,0,11,11,32,1,65,128,128,128,128,120,113,33,3,2,64,32,2,65,1,72,13,0,32,5,65,128,128,128,124,106,32,2,65,23,116,114,33,2,12,2,11,32,5,65,1,32,2,107,117,33,2,
      12,1,11,32,0,67,0,0,0,0,148,15,11,32,2,32,3,114,190,11,11,138,131,128,128,0,3,0,65,0,11,8,0,0,0,0,0,0,0,0,0,65,16,11,104,79,0,0,0,1,0,0,0,77,0,0,0,1,0,0,0,69,0,0,0,2,0,0,0,71,0,0,0,2,0,0,0,76,0,0,0,1,0,
      0,0,74,0,0,0,1,0,0,0,65,0,0,0,2,0,0,0,67,0,0,0,2,0,0,0,74,0,0,0,1,0,0,0,72,0,0,0,1,0,0,0,64,0,0,0,2,0,0,0,67,0,0,0,2,0,0,0,72,0,0,0,4,0,0,0,0,65,128,1,11,136,2,131,249,162,0,68,78,110,0,252,41,21,0,209,
      87,39,0,221,52,245,0,98,219,192,0,60,153,149,0,65,144,67,0,99,81,254,0,187,222,171,0,183,97,197,0,58,110,36,0,210,77,66,0,73,6,224,0,9,234,46,0,28,146,209,0,235,29,254,0,41,177,28,0,232,62,167,0,245,53,
      130,0,68,187,46,0,156,233,132,0,180,38,112,0,65,126,95,0,214,145,57,0,83,131,57,0,156,244,57,0,139,95,132,0,40,249,189,0,248,31,59,0,222,255,151,0,15,152,5,0,17,47,239,0,10,90,139,0,109,31,109,0,207,126,
      54,0,9,203,39,0,70,79,183,0,158,102,63,0,45,234,95,0,186,39,117,0,229,235,199,0,61,123,241,0,247,57,7,0,146,82,138,0,251,107,234,0,31,177,95,0,8,93,141,0,48,3,86,0,123,252,70,0,240,171,107,0,32,188,207,
      0,54,244,154,0,227,169,29,0,94,97,145,0,8,27,230,0,133,153,101,0,160,20,95,0,141,64,104,0,128,216,255,0,39,115,77,0,6,6,49,0,202,86,21,0,201,168,115,0,123,226,96,0,107,140,192,0,0,236,129,128,128,0,7,108,
      105,110,107,105,110,103,2,8,151,129,128,128,0,9,0,32,2,10,105,110,105,116,105,97,108,105,115,101,1,2,12,46,76,95,102,114,101,113,117,101,110,99,121,0,0,8,0,32,3,12,97,100,118,97,110,99,101,66,108,111,99,
      107,2,16,0,1,2,8,46,76,109,101,108,111,100,121,1,0,104,1,2,13,46,76,95,95,99,111,110,115,116,97,110,116,95,2,0,136,2,0,16,0,0,16,1,0,2,4,55,46,76,115,116,100,95,95,105,110,116,114,105,110,115,105,99,115,
      95,95,105,110,116,101,114,110,97,108,95,95,109,97,116,104,95,105,109,112,108,101,109,101,110,116,97,116,105,111,110,115,95,95,102,109,111,100,5,192,128,128,128,0,3,17,46,98,115,115,46,46,76,95,102,114,
      101,113,117,101,110,99,121,3,0,16,46,114,111,100,97,116,97,46,46,76,109,101,108,111,100,121,4,0,21,46,114,111,100,97,116,97,46,46,76,95,95,99,111,110,115,116,97,110,116,95,4,0,0,199,128,128,128,0,10,114,
      101,108,111,99,46,67,79,68,69,5,14,3,9,1,0,7,92,3,7,104,3,4,180,2,4,4,4,204,2,4,0,3,236,8,1,0,4,241,14,5,0,0,250,14,6,0,140,16,7,0,158,16,7,0,176,16,7,0,216,36,8,0,143,37,8,7,235,37,3,]);
  }
}
